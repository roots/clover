{"version":3,"sources":["../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/config/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/pipes/actions.js","../src/bud/pipes/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/ensureDir.js","../src/bud/actions/ensureDirs.js","../src/bud/actions/git.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/touch.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/index.js","../src/components/Banner.js","../src/components/Tasks.js","../src/components/Error.js","../src/components/App.js","index.js"],"names":["helpers","data","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","sprout","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","makeConfig","projectDir","templateDir","config","execa","cwd","makeData","setData","key","value","project","command","cmd","makeUtil","actions","observer","props","tasks","pipe","task","Observable","subscribe","next","error","complete","pipes","addDependencies","util","installation","repo","dev","pkgs","join","stdout","on","status","then","prettier","src","dest","template","parser","format","copy","ensureDir","fs","ensureDirs","dirs","clone","git","action","install","json","require","file","output","merge","err","console","log","touch","JSON","stringify","register","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","bud","registerActions","job","Banner","label","Tasks","noClear","write","Error","message","process","App","outDir","configFile","prompts","setPrompts","setStatus","setError","setComplete","subscription","setSubscription","exit","unsubscribe","propTypes","PropTypes","string","bool","defaultProps","Bud"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({sprout, data}) => {\n  handlebarsHelpers({handlebars})\n\n  sprout.registerHelpers &&\n    sprout.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Config\n *\n * @param {string} projectDir\n */\nconst makeConfig = ({projectDir, templateDir, config}) => ({\n  projectDir,\n  templateDir,\n  ...config,\n  execa: {\n    cwd: projectDir,\n  },\n})\n\nexport default makeConfig\n","/**\n * Make data\n *\n * @type   {func}\n * @prop   {object} data\n * @return {object}\n */\nconst makeData = ({config, data}) => {\n  const setData = ({key, value}) => {\n    data[`${key}`] = value\n  }\n\n  return {\n    ...(config ? config.project : []),\n    ...data,\n    setData,\n  }\n}\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @prop   {object} config\n * @return {object}\n */\nconst makeUtil = ({config}) => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Curried actions\n *\n * @prop {Observer} observer\n * @prop {object}   sprout\n * @prop {object}   task\n * @prop {object}   actionProps\n */\nconst actions = ({observer, sprout, actions, ...props}) => {\n  from(sprout.tasks)\n    .pipe(\n      concatMap(\n        task => new Observable(async observer => {\n          actions[task.task]({task, actions, observer, ...props})\n        })\n      )\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default actions\n","import actions from './actions'\nimport registerActions from './actions'\n\n/**\n * Make Pipes\n *\n * @return {object}\n */\nconst pipes = [\n  actions,\n]\n\nexport default pipes\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(\n      `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(' ')}`,\n    )\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(\n      `composer require ${task.pkgs.join(' ')} ${\n        task.dev ? `--development` : ``\n      }`,\n    )\n  }\n\n  installation.stdout.on('data', status => {\n    observer.next(status)\n  })\n\n  installation.then(() => observer.complete())\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({task, observer, data, config, prettier, compiler}) => {\n  const src = await readFile(join(config.templateDir, task.src), 'utf8')\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n  observer.next(`Writing file ${dest}`)\n  await outputFile(\n    ...[\n      join(config.projectDir, dest),\n      task.parser ? prettier.format(template, task.parser) : template,\n    ],\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, observer, config}) => {\n  const src = join(config.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  observer.next(`Copying file`)\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","import {join} from 'path'\nimport fs from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst ensureDir = async ({task, observer, config, data, compiler}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  observer.next(`Writing directory ${path}`)\n  await fs.ensureDir(path)\n\n  observer.complete()\n}\n\nexport default ensureDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @prop   {task array} dirs\n * @return {Observable}\n */\nconst ensureDirs = ({task, observer, actions, config, data, compiler}) =>\n    from(task.dirs)\n    .pipe(\n      concatMap(path =>\n        new Observable(observer => {\n          actions.ensureDir({\n            task: {path},\n            config,\n            data,\n            compiler,\n            observer,\n          })\n        })\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n\nexport default ensureDirs\n","/**\n * Action: git clone\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {object}   util\n */\nconst clone = async ({observer, task, util}) => {\n  observer.next(`Cloning ${task.repo} to ${task.dest}`)\n\n  const clone = util.command(\n    `git clone git@github.com:${task.repo} ${task.dest}`\n  )\n\n  clone.stdout.on('data', () => observer.next(\n    observer.next(`Cloning ${task.repo} to ${task.dest}}`)\n  ))\n\n  clone.then(() => observer.complete())\n}\n\n/**\n * Action: Github\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst git = async ({task, observer, ...props}) => {\n  if (task.action == 'clone') {\n    clone({task, observer, ...props})\n  }\n}\n\nexport default git\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  let installation\n\n  observer.next(`Installing packages from ${task.repo}...`)\n\n  if (task.repo !== 'npm' && task.repo !== 'packagist') {\n    observer.error(`Incorrect package repo specified.`)\n  }\n\n  if (task.repo == 'npm') {\n    installation = util.command(`yarn`)\n    installation.stdout.on('data', status => {\n      observer.next(status)\n    })\n    installation.then(() => observer.complete())\n  }\n\n  if (task.repo == 'packagist') {\n    installation = util.command(`composer install`)\n    installation.then(() => observer.complete())\n  }\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json'),\n    )\n\n    observer.complete()\n  } catch (err) {\n    console.log(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {ensureFile} from 'fs-extra'\nimport {join} from 'path'\n\n/**\n * Action: Touch\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst touch = async ({task, config, compiler, data, observer}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureFile(path).then(() => {\n      observer.next()\n    })\n\n    observer.complete()\n  } catch (error) {\n    observer.error(\n      `${JSON.stringify({\n        task,\n        config,\n        data,\n      })}`\n    )\n  }\n}\n\nexport default touch\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport ensureDir from './ensureDir'\nimport ensureDirs from './ensureDirs'\nimport git from './git'\nimport install from './install'\nimport json from './json'\nimport touch from './touch'\n\n/**\n * Actions\n *\n * @type {object}\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  ensureDir,\n  ensureDirs,\n  git,\n  install,\n  json,\n  touch,\n  register: function ({action}) {\n      this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n * @type {object}\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @type  {async func}\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 80,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @type   {func}\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content = typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\nimport makeCompiler from './compiler'\nimport makeConfig from './config'\nimport makeData from './data'\nimport makeUtil from './util'\nimport pipes from './pipes'\nimport actions from './actions'\nimport prettier from './prettier'\n\n/**\n * 🌱 bud starter\n *\n * @prop {string} projectDir\n * @prop {object} projectConfig\n * @prop {object} data\n * @prop {object} sprout\n * @prop {string} templateDir\n *\n * @return {Observable}\n */\nconst bud = props => {\n  const {sprout} = props\n\n  const config = makeConfig({...props})\n  const data = makeData({...props})\n  const util = makeUtil({config})\n  const compiler = makeCompiler({sprout, data})\n\n  sprout.registerActions\n    && sprout.registerActions.forEach(action => {\n      actions.register({action})\n    })\n\n  return new Observable(observer => {\n    const props = {config, data, actions, compiler, prettier, util}\n\n    from(pipes)\n      .pipe(\n        concatMap(\n          job => new Observable(async observer => {\n            await job({observer, sprout, ...props})\n          })\n        )\n      )\n      .subscribe({\n        next: next => observer.next(next),\n        error: error => observer.error(error),\n        complete: () => observer.complete(),\n      })\n    })\n}\n\nexport default bud\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Link from 'ink-link'\n\n/**\n * Banner component.\n *\n * @prop {string} label\n */\nconst Banner = ({label}) => (\n  <Box marginBottom={1} flexDirection=\"row\" justifyContent=\"space-between\">\n    {label && <Text>{label}</Text>}\n    <Box flexDirection=\"row\">\n      <Text>{`🌱`}</Text>\n      <Text bold>\n        <Link url=\"https://roots.io/bud\">\n          <Color green>{'  Bud'}</Color>\n        </Link>\n      </Text>\n    </Box>\n  </Box>\n)\n\nexport default Banner\n","import React, {useEffect} from 'react'\nimport {Box, Color, Text, useStdout} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} data\n * @prop {object} status\n * @prop {bool}   complete\n * @prop {bool}   noClear\n */\nconst Tasks = ({data, status, complete, noClear}) => {\n  const {stdout} = useStdout()\n  useEffect(() => {\n    data && !noClear && stdout.write('\\x1B[2J\\x1B[0f')\n  }, [data])\n\n  return status ? (\n    <Box>\n      {complete ? (\n        <Color green>⚡️ All set.</Color>\n      ) : (\n        <Text>\n          <Color green>\n            <Spinner type=\"dots\" />\n          </Color>\n          {` ${status}`}\n        </Text>\n      )}\n    </Box>\n  ) : null\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Box, Color} from 'ink'\n\n/**\n * Error\n */\nconst Error = ({message}) => (\n  <Box>\n    <Color red>💥 {JSON.stringify(message)}</Color>\n  </Box>\n)\n\nexport default Error\n","import {join} from 'path'\nimport {existsSync} from 'fs'\nimport React, {useState, useEffect} from 'react'\nimport {Box, useApp} from 'ink'\nimport PropTypes from 'prop-types'\nimport {prompt} from 'enquirer'\nimport bud from '../bud'\n\nimport Banner from './Banner'\nimport Tasks from './Tasks'\nimport Error from './Error'\n\nconst cwd = process.cwd()\n\n/**\n * App\n *\n * @prop {string} label\n * @prop {string} templateDir\n * @prop {object} sprout\n * @prop {string} outDir\n * @prop {object} values\n * @prop {object} children\n * @prop {bool}   noClear\n */\nconst App = ({label, templateDir, sprout, outDir, noClear}) => {\n  /**\n   * source bud.config.json\n   */\n  const configFile = join(cwd, '.bud/bud.config.json')\n  const [config] = useState(existsSync(configFile) ? require(configFile) : null)\n\n  /**\n   * Assemble data from prompts\n   */\n  const [data, setData] = useState(null)\n  const [prompts, setPrompts] = useState(sprout.prompts ? sprout.prompts : null)\n  useEffect(() => {\n    if (prompts) {\n      prompt(prompts).then(data => {\n        setPrompts(null)\n        setData(data)\n      })\n    } else {\n      setPrompts(null)\n      setData({})\n    }\n  }, [])\n\n  /**\n   * Observer subscribe\n   */\n  const [status, setStatus] = useState(null)\n  const [error, setError] = useState(null)\n  const [complete, setComplete] = useState(false)\n  const [subscription, setSubscription] = useState(false)\n  useEffect(() => {\n    data &&\n      !subscription &&\n      setSubscription(\n        bud({\n          sprout,\n          data,\n          config,\n          templateDir,\n          projectDir: join(cwd, outDir),\n        }).subscribe({\n          next: next => setStatus(next),\n          error: error => setError(error),\n          complete: () => setComplete(true),\n        }),\n      )\n  }, [config, data, status])\n\n  /**\n   * Observer unsubscribe.\n   */\n  const {exit} = useApp()\n  useEffect(() => {\n    const unsubscribe = async () => {\n      await subscription.unsubscribe()\n      exit()\n    }\n\n    complete && unsubscribe()\n  }, [complete, subscription])\n\n  /**\n   * Render observable updates and errors\n   */\n  return (\n    <Box flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={label} />\n      <Tasks\n        data={data}\n        status={status}\n        complete={complete}\n        noClear={noClear}\n      />\n      {error && <Error message={error} />}\n    </Box>\n  )\n}\n\nApp.propTypes = {\n  label: PropTypes.string,\n  sprout: PropTypes.object,\n  noClear: PropTypes.bool,\n}\n\nApp.defaultProps = {\n  sprout: {\n    actions: [],\n    label: 'Bud',\n    prompts: [],\n  },\n  noClear: false,\n}\n\nexport default App\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport App from './../src/components/App'\n\n/** Command: bud */\n/// Bud information\nconst Bud = () => (\n  <App label={'Bud: Modern WordPress Scaffolding'} inert={true}>\n    <Box flexDirection=\"column\">\n      <Box marginBottom={1}>\n        <Text>\n          To get started run{' '}\n          <Color green>npx @roots/bud init {`{project-dir}`}</Color>\n        </Text>\n      </Box>\n    </Box>\n  </App>\n)\n\nexport default Bud\n"]}