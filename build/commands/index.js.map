{"version":3,"sources":["../src/hooks/useGeneratorIndex.js","../src/components/Banner.js","../src/components/Loading.js","../src/components/App.js","../src/hooks/useConfig.js","../src/hooks/useData.js","../src/hooks/useGenerator.js","../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/config/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/pipes/actions.js","../src/bud/pipes/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/ensureDir.js","../src/bud/actions/ensureDirs.js","../src/bud/actions/git/clone.js","../src/bud/actions/git/index.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/touch.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/index.js","../src/hooks/useSubscription.js","../src/components/Tasks.js","../src/middleware/GeneratorMiddleware.js","generate/index.js","index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","dir","resolve","join","scanAllDirs","plugin","useGeneratorIndex","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","Banner","Loading","message","spinnerColor","propTypes","PropTypes","string","defaultProps","App","isLoading","loadingMessage","children","useConfig","configFile","config","require","useData","data","setData","prompts","then","makeGenerator","generatorFile","makeGeneratorTemplateDir","useGenerator","templateDir","tasks","task","helpers","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","handlebars","registerHelpers","push","registerHelper","compiler","make","compile","makeConfig","projectDir","execa","makeData","key","value","command","cmd","makeUtil","actions","observer","props","pipe","Observable","subscribe","next","error","pipes","addDependencies","util","cmdStr","repo","dev","pkgs","exitCode","stderr","prettier","src","dest","template","parser","format","copy","ensureDir","fs","ensureDirs","dirs","clone","stdout","on","git","action","install","json","file","output","merge","err","console","log","touch","register","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","JSON","stringify","bud","registerActions","job","useSubscription","exit","subscription","setSubscription","setStatus","setComplete","unsubscribe","Tasks","toString","GeneratorMiddleware","Generate","inputArgs","setOutput","buds","setBuds","label","selection","setSelection","filter","displayQuickSearch","array","Bud"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/generators/**/*.bud.js`,\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(plugin =>\n        path.join(plugin.dir, '/generators/**/*.bud.js'),\n      )\n\n      const matches = await globby([\n        ...packages,\n        '!/**/*.preset.bud.js',\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGeneratorIndex = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators(\n    'bud-core-generators',\n  )\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGeneratorIndex\nexport {useProjectGenerators, useModuleGenerators}\n","import React from 'react'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\n\nconst Banner = () => (\n  <Box flexDirection=\"column\" marginBottom={1}>\n    <Text>\n      <Link url=\"https://github.com/roots/bud\" fallback={false}>\n        <Color green>⚡️ @roots/bud</Color>\n      </Link>\n    </Text>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Box, Color} from 'ink'\nimport Spinner from 'ink-spinner'\nimport PropTypes from 'prop-types'\n\n/**\n * Loading\n *\n * @prop {string} message\n */\nconst Loading = ({message, spinnerColor = 'white'}) => (\n  <Box>\n    <Color keyword={spinnerColor}>\n      <Spinner />\n    </Color>{' '}\n    {message}\n  </Box>\n)\n\nLoading.propTypes = {\n  message: PropTypes.string,\n}\n\nLoading.defaultProps = {\n  message: 'Loading',\n}\n\nexport default Loading\n","import React from 'react'\nimport {Box} from 'ink'\n\nimport Banner from './Banner'\nimport Loading from './Loading'\n\n/**\n * Bud application.\n *\n * @prop {object} children\n */\nconst App = ({isLoading, loadingMessage, children}) => (\n  <Box\n    flexDirection=\"column\"\n    justifyContent=\"flex-start\"\n    paddingTop={1}\n    paddingRight={1}\n    paddingBottom={0}\n    paddingLeft={1}>\n    <Banner />\n\n    {isLoading && (\n      <Loading\n        spinnerColor=\"green\"\n        message={loadingMessage ?? 'Loading'}\n      />\n    )}\n    {children}\n  </Box>\n)\n\nexport default App\n","import {join} from 'path'\nimport {existsSync} from 'fs-extra'\n\n/**\n * Use config\n */\nconst useConfig = cwd => {\n  const configFile = join(cwd, '.bud/bud.config.json')\n  const config = existsSync(configFile) ? require(configFile) : null\n\n  return {config}\n}\n\nexport default useConfig\n","import {useEffect, useState} from 'react'\nimport {prompt} from 'enquirer'\n\n/**\n * Use prompts\n */\nconst useData = generator => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    if (generator && !data) {\n      generator.prompts\n        ? prompt(generator.prompts).then(data => setData(data))\n        : setData({})\n    }\n  }, [generator])\n\n  return {data}\n}\n\nexport default useData\n","import {join, dirname} from 'path'\nimport {existsSync} from 'fs'\n\nconst makeGenerator = generatorFile =>\n  existsSync(generatorFile) ? require(generatorFile) : null\n\nconst makeGeneratorTemplateDir = generatorFile =>\n  join(dirname(generatorFile), 'templates')\n\n/**\n * Use Generator\n */\nconst useGenerator = generatorFile => {\n  const generator = {\n    ...makeGenerator(generatorFile),\n    templateDir: makeGeneratorTemplateDir(generatorFile),\n  }\n\n  // Attach the templateDir ref. to each generator task.\n  generator.tasks = generator.tasks.map(task => ({\n    ...task,\n    templateDir: generator.templateDir,\n  }))\n\n  return {generator}\n}\n\nexport default useGenerator\nexport {makeGenerator, makeGeneratorTemplateDir}\n","/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({generator, data}) => {\n  handlebarsHelpers({handlebars})\n\n  generator.registerHelpers &&\n    generator.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Config\n *\n * @param {string} projectDir\n */\nconst makeConfig = ({projectDir, config}) => ({\n  projectDir,\n  ...config,\n  execa: {\n    cwd: projectDir,\n  },\n})\n\nexport default makeConfig\n","/**\n * Make data\n *\n * @type   {func}\n * @prop   {object} data\n * @return {object}\n */\nconst makeData = ({config, data, generator}) => {\n  const setData = ({key, value}) => {\n    data[key] = value\n  }\n\n  return {\n    ...(config ? config.project : []),\n    ...data,\n    ...(generator.data ? generator.data : []),\n    setData,\n  }\n}\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @prop   {object} config\n * @return {object}\n */\nconst makeUtil = ({config}) => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Curried actions\n *\n * @prop {Observer} observer\n * @prop {object}   generator\n * @prop {object}   task\n * @prop {object}   actionProps\n */\nconst actions = ({observer, generator, actions, ...props}) => {\n  from(generator.tasks)\n    .pipe(\n      concatMap(\n        task =>\n          new Observable(async observer => {\n            actions[task.task]({task, actions, observer, ...props})\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default actions\n","import actions from './actions'\n\n/**\n * Make Pipes\n *\n * @return {object}\n */\nconst pipes = [actions]\n\nexport default pipes\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  const cmdStr = () => {\n    switch (task.repo) {\n      case 'npm':\n        return `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(\n          ' ',\n        )}`\n      case 'packagist':\n        return `composer require ${task.pkgs.join(' ')} ${\n          task.dev ? `--development` : ``\n        }`\n      default:\n        observer.error(`Incorrect package repo specified.`)\n    }\n  }\n\n  observer.next(`Installating packages from ${task.repo}`)\n  const {command, exitCode, stderr} = await util.command(cmdStr())\n  command && observer.next(command)\n  exitCode == 0 ? observer.complete() : observer.error(stderr)\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({\n  task,\n  observer,\n  data,\n  prettier,\n  compiler,\n  config,\n}) => {\n  observer.next(`Write file: ${task.src}`)\n\n  const src = await readFile(join(task.templateDir, task.src), 'utf8')\n\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n\n  observer.next(`Writing file ${dest}`)\n\n  await outputFile(\n    join(config.projectDir, dest),\n    task.parser ? prettier.format(template, task.parser) : template,\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, config, observer}) => {\n  const src = join(task.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  observer.next(`Copying file`)\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","import {join} from 'path'\nimport fs from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst ensureDir = async ({\n  task,\n  observer,\n  config,\n  data,\n  compiler,\n}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n  observer.next(`Writing directory ${path}`)\n  await fs.ensureDir(path)\n\n  observer.complete()\n}\n\nexport default ensureDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @prop   {task array} dirs\n * @return {Observable}\n */\nconst ensureDirs = ({\n  task,\n  observer,\n  actions,\n  config,\n  data,\n  compiler,\n}) => {\n  from(task.dirs)\n    .pipe(\n      concatMap(\n        path =>\n          new Observable(observer => {\n            actions.ensureDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n            })\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default ensureDirs\n","/**\n * Action: git clone\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {object}   util\n */\nconst clone = async ({observer, task, util}) => {\n  observer.next(`Cloning ${task.repo} to ${task.dest}`)\n\n  const clone = util.command(\n    `git clone git@github.com:${task.repo} ${task.dest}`,\n  )\n\n  clone.stdout.on('data', () =>\n    observer.next(\n      observer.next(`Cloning ${task.repo} to ${task.dest}}`),\n    ),\n  )\n\n  clone.then(() => observer.complete())\n}\n\nexport default clone\n","import clone from './clone'\n\n/**\n * Action: Github\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst git = async ({task, observer, ...props}) => {\n  if (task.action == 'clone') {\n    clone({task, observer, ...props})\n  }\n}\n\nexport default git\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  const cmdStr = () => {\n    switch (task.repo) {\n      case 'npm':\n        return 'yarn'\n      case 'packagist':\n        return 'composer install'\n      default:\n        observer.error(`Incorrect package repo specified.`)\n    }\n  }\n\n  observer.next(`Installating packages from ${task.repo}`)\n\n  const {command, exitCode, stderr} = await util.command(cmdStr())\n\n  command && observer.next(command)\n\n  exitCode == 0 ? observer.complete() : observer.error(stderr)\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json'),\n    )\n\n    observer.complete()\n  } catch (err) {\n    console.log(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {ensureFile} from 'fs-extra'\nimport {join} from 'path'\n\n/**\n * Action: Touch\n *\n * @prop   {object}   task\n * @prop   {object}   config\n * @prop   {object}   compiler\n * @prop   {object}   data\n * @prop   {Observer} observer\n */\nconst touch = async ({task, config, compiler, data, observer}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureFile(path).then(() => {\n      observer.next()\n    })\n\n    observer.complete()\n  } catch (error) {\n    observer.error()\n  }\n}\n\nexport default touch\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport ensureDir from './ensureDir'\nimport ensureDirs from './ensureDirs'\nimport git from './git'\nimport install from './install'\nimport json from './json'\nimport touch from './touch'\n\n/**\n * Actions\n *\n * @type {object}\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  ensureDir,\n  ensureDirs,\n  git,\n  install,\n  json,\n  touch,\n  register: function ({action}) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n * @type {object}\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @type  {async func}\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 70,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @type   {func}\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content =\n    typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\nimport makeCompiler from './compiler'\nimport makeConfig from './config'\nimport makeData from './data'\nimport makeUtil from './util'\nimport pipes from './pipes'\nimport actions from './actions'\nimport prettier from './prettier'\n\n/**\n * Bud\n *\n * @prop {string} projectDir\n * @prop {object} config\n * @prop {object} data\n * @prop {object} generator\n * @prop {string} templateDir\n * @prop {bool}   logging\n *\n * @return {Observable}\n */\nconst bud = props => {\n  /** 🌱 */\n  const {generator} = props\n  const config = makeConfig({...props})\n  const data = makeData({...props})\n  const util = makeUtil({config})\n  const compiler = makeCompiler({generator, data})\n\n  generator.registerActions &&\n    generator.registerActions.forEach(action => {\n      actions.register({action})\n    })\n\n  return new Observable(observer => {\n    const props = {\n      config,\n      data,\n      actions,\n      compiler,\n      prettier,\n      util,\n      generator,\n    }\n\n    from(pipes)\n      .pipe(\n        concatMap(\n          job =>\n            new Observable(async observer => {\n              await job({observer, ...props})\n            }),\n        ),\n      )\n\n      .subscribe({\n        next: next => {\n          observer.next(next)\n        },\n        error: error => {\n          observer.error(error)\n        },\n        complete: () => {\n          observer.complete()\n        },\n      })\n  })\n}\n\nexport default bud\n","import {useEffect, useState} from 'react'\nimport {useApp} from 'ink'\nimport bud from './../bud'\n\n/**\n * Use subscription.\n */\nconst useSubscription = ({config, data, projectDir, generator}) => {\n  const {exit} = useApp()\n\n  const [subscription, setSubscription] = useState(false)\n  const [status, setStatus] = useState(null)\n  const [error] = useState(null)\n  const [complete, setComplete] = useState(false)\n\n  useEffect(() => {\n    if (generator && data && !subscription) {\n      setSubscription(\n        bud({config, data, generator, projectDir}).subscribe({\n          next: next => setStatus(next),\n          complete: () => setComplete(true),\n        }),\n      )\n    }\n  }, [data])\n\n  useEffect(() => {\n    complete &&\n      (() => {\n        subscription.unsubscribe()\n        exit()\n      })()\n  }, [complete])\n\n  return {status, error, complete}\n}\n\nexport default useSubscription\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} status\n * @prop {object} sprout\n * @prop {bool}   complete\n */\nconst Tasks = ({status, complete}) => {\n  if (complete) {\n    return (\n      <Text>\n        <Color green>🏁{'  '}Done</Color>\n      </Text>\n    )\n  }\n\n  if (!status || complete) {\n    return []\n  }\n\n  return (\n    <Box>\n      {status && (\n        <Text>\n          <Color green>\n            <Spinner />\n          </Color>{' '}\n          {status.toString()}\n        </Text>\n      )}\n    </Box>\n  )\n}\n\nexport default Tasks\n","import React from 'react'\n\nimport useConfig from './../hooks/useConfig'\nimport useData from './../hooks/useData'\nimport useGenerator from './../hooks/useGenerator'\nimport useSubscription from './../hooks/useSubscription'\n\nimport Tasks from './../components/Tasks'\n\n/**\n * Middleware: Generator\n *\n * @prop {string} generatorFile\n * @prop {string} output\n */\nconst GeneratorMiddleware = ({generatorFile, output}) => {\n  const {config} = useConfig(process.cwd())\n  const {generator} = useGenerator(generatorFile)\n  const {data} = useData(generator)\n  const {status, complete} = useSubscription({\n    config,\n    data,\n    generator,\n    projectDir: output,\n  })\n\n  return <Tasks status={status} complete={complete} />\n}\n\nexport default GeneratorMiddleware\n","import React, {useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport path from 'path'\nimport {isEqual} from 'lodash'\nimport QuickSearchInput from 'ink-quicksearch-input'\n\nimport useGeneratorIndex from './../../src/hooks/useGeneratorIndex'\n\nimport App from './../../src/components/App'\nimport GeneratorMiddleware from './../../src/middleware/GeneratorMiddleware'\n\nconst {cwd} = process\n\n/** Command: bud generate */\n/// Run a generator.\nconst Generate = ({inputArgs}) => {\n  const [name] = useState(inputArgs?.[1] ?? null)\n  const [output, setOutput] = useState(cwd)\n  useEffect(() => {\n    inputArgs?.[2] && (() => {\n      setOutput(path.resolve(cwd, inputArgs[2]))\n    })()\n  }, [inputArgs])\n\n  const {core, plugin, project, complete} = useGeneratorIndex()\n\n  const [buds, setBuds] = useState(null)\n  useEffect(() => {\n    complete &&\n      setBuds(\n        [...project, ...plugin, ...core].map(bud => ({\n          value: bud.path,\n          label: bud.name,\n        })),\n      )\n  }, [name, complete])\n\n  const [selection, setSelection] = useState(null)\n  useEffect(() => {\n    name &&\n      buds &&\n      complete &&\n      setSelection(buds.filter(bud => isEqual(bud.label, name))[0])\n  }, [complete, buds, name])\n\n  const isLoading = !name && !buds && !selection\n  const displayQuickSearch = !name && buds && !selection\n\n  return (\n    <App isLoading={isLoading}>\n      {displayQuickSearch && (\n        <QuickSearchInput\n          label=\"Select a generator\"\n          items={buds}\n          onSelect={selection => setSelection(selection)}\n        />\n      )}\n\n      {selection && (\n        <GeneratorMiddleware\n          output={output}\n          generatorFile={selection.value}\n        />\n      )}\n    </App>\n  )\n}\n\nGenerate.propTypes = {\n  inputArgs: PropTypes.array,\n}\n\nexport default Generate\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Generate from './generate'\n\n/** Command: bud */\n/// Bud CLI\nconst Bud = ({inputArgs}) => <Generate inputArgs={inputArgs} />\n\nBud.propTypes = {\n  inputArgs: PropTypes.array,\n}\n\nexport default Bud\n"]}