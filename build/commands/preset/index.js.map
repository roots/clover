{"version":3,"sources":["../src/hooks/useGenerators.js","../src/hooks/usePresets.js","../src/components/Tasks.js","../src/App.js","preset/index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","dir","resolve","join","scanAllDirs","plugin","globby","sync","useGenerators","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","useProjectPresets","presets","setPresets","useModulePresets","Tasks","toString","App","sprout","Preset","inputArgs","selection","setSelection","corePresets","pluginPresets","projectPresets","presetsComplete","coreGenerators","pluginGenerators","projectGenerators","generatorsComplete","value","label","preset","match","filter","setPreset","data","require","generatorQueue","setGeneratorQueue","presetGenerators","buds","prompts","setPrompts","promptsReducer","acc","reduce","noResults","length","propTypes","PropTypes","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEA;;;;AAGA,MAAME,WAAW,GAAGC,OAAO,IACzBA,OAAO,CAACC,GAAR,CAAYC,SAAS,KAAK;AACxBC,EAAAA,IAAI,EAAEC,cAAKC,QAAL,CAAcH,SAAd,EAAyBI,OAAzB,CAAiC,SAAjC,EAA4C,EAA5C,CADkB;AAExBF,EAAAA,IAAI,EAAEF;AAFkB,CAAL,CAArB,CADF;AAMA;;;;;AAGA,MAAMK,oBAAoB,GAAG,MAAM;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,EAAT,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AACA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMX,OAAO,GAAG,MAAM,qBAAO,CAC1B,GAAEH,GAAI,4BADoB,CAAP,CAAtB;AAIAY,MAAAA,aAAa,CAACV,WAAW,CAACC,OAAD,CAAZ,CAAb;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KATA;AAUF,GAXD,EAWG,EAXH;AAaA,SAAO,CAACH,UAAD,EAAaE,OAAb,CAAP;AACD,CAjBD;AAmBA;;;;;;;;;AAKA,MAAME,mBAAmB,GAAGC,OAAO,IAAI;AACrC,QAAM,CAACL,UAAD,EAAaC,aAAb,IAA8B,qBAAS,EAAT,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AAEA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMG,QAAQ,GAAG,0BAAY;AAC3BC,QAAAA,GAAG,EAAEX,cAAKY,OAAL,CAAaZ,cAAKa,IAAL,CAAUpB,GAAV,EAAe,cAAf,CAAb,CADsB;AAE3BqB,QAAAA,WAAW,EAAE,IAFc;AAG3BL,QAAAA;AAH2B,OAAZ,EAIdZ,GAJc,CAKfkB,MAAM,IAAIf,cAAKa,IAAL,CAAUE,MAAM,CAACJ,GAAjB,EAAsB,cAAtB,CALK,CAAjB;;AAQA,YAAMf,OAAO,GAAGoB,gBAAOC,IAAP,CAAYP,QAAZ,CAAhB;;AAEAL,MAAAA,aAAa,CAACV,WAAW,CAACC,OAAD,CAAZ,CAAb;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAfA;AAgBF,GAjBD,EAiBG,CAACE,OAAD,CAjBH;AAmBA,SAAO,CAACL,UAAD,EAAaE,OAAb,CAAP;AACD,CAxBD;AA0BA;;;;;;;AAGA,MAAMY,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BjB,oBAAoB,EAAtD;AACA,QAAM,CAACkB,IAAD,EAAOC,WAAP,IAAsBd,mBAAmB,CAAC,qBAAD,CAA/C;AACA,QAAM,CAACO,MAAD,EAASQ,aAAT,IAA0Bf,mBAAmB,CAAC,eAAD,CAAnD;AAEA,SAAO;AACLW,IAAAA,OADK;AAELJ,IAAAA,MAFK;AAGLM,IAAAA,IAHK;AAILG,IAAAA,MAAM,EAAE;AACNL,MAAAA,OAAO,EAAEC,cADH;AAENL,MAAAA,MAAM,EAAEQ,aAFF;AAGNF,MAAAA,IAAI,EAAEC;AAHA,KAJH;AASLG,IAAAA,QAAQ,EAAEH,WAAW,IAAIF,cAAf,IAAiCG;AATtC,GAAP;AAWD,CAhBD;;eAkBeL;;;;;;;;;;AC1Ff;;AACA;;AACA;;AACA;;;;AAEA,MAAMzB,GAAG,GAAGC,OAAO,CAACD,GAAR,EAAZ;AAEA;;;;;;;AAMA,MAAME,WAAW,GAAGC,OAAO,IACzBA,OAAO,CAACC,GAAR,CAAYC,SAAS,KAAK;AACxBC,EAAAA,IAAI,EAAEC,cAAKC,QAAL,CAAcH,SAAd,EAAyBI,OAAzB,CAAiC,SAAjC,EAA4C,EAA5C,CADkB;AAExBF,EAAAA,IAAI,EAAEF;AAFkB,CAAL,CAArB,CADF;AAMA;;;;;AAGA,MAAM4B,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,EAAT,CAA9B;AACA,QAAM,CAACtB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AACA,wBAAU,MAAM;AACd;;AAAC,KAAC,YAAY;AACZA,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMX,OAAO,GAAG,MAAM,qBAAO,CAC1B,GAAEH,GAAI,mCADoB,CAAP,CAAtB;AAIAmC,MAAAA,UAAU,CAACjC,WAAW,CAACC,OAAD,CAAZ,CAAV;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KATA;AAUF,GAXD,EAWG,EAXH;AAaA,SAAO,CAACoB,OAAD,EAAUrB,OAAV,CAAP;AACD,CAjBD;AAmBA;;;;;;;;;AAKA,MAAMuB,gBAAgB,GAAGpB,OAAO,IAAI;AAClC,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,EAAT,CAA9B;AACA,QAAM,CAACtB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AACA,wBAAU,MAAM;AACdE,IAAAA,OAAO,IACL,CAAC,YAAY;AACXF,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,YAAMG,QAAQ,GAAG,0BAAY;AAACD,QAAAA;AAAD,OAAZ,EAAuBZ,GAAvB,CACfkB,MAAM,IAAK,GAAEA,MAAM,CAACJ,GAAI,qBADT,CAAjB;AAIA,YAAMf,OAAO,GAAG,MAAM,qBAAOc,QAAP,CAAtB;AAEAkB,MAAAA,UAAU,CAACjC,WAAW,CAACC,OAAD,CAAZ,CAAV;AACAW,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAXD,GADF;AAaD,GAdD,EAcG,CAACE,OAAD,CAdH;AAgBA,SAAO,CAACkB,OAAD,EAAUrB,OAAV,CAAP;AACD,CApBD;AAsBA;;;;;;;AAGA,MAAMY,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,OAAD,EAAUC,cAAV,IAA4BM,iBAAiB,EAAnD;AACA,QAAM,CAACL,IAAD,EAAOC,WAAP,IAAsBO,gBAAgB,CAAC,kBAAD,CAA5C;AACA,QAAM,CAACd,MAAD,EAASQ,aAAT,IAA0BM,gBAAgB,CAAC,YAAD,CAAhD;AAEA,SAAO;AACLV,IAAAA,OADK;AAELJ,IAAAA,MAFK;AAGLM,IAAAA,IAHK;AAILG,IAAAA,MAAM,EAAE;AACNL,MAAAA,OAAO,EAAEC,cADH;AAENL,MAAAA,MAAM,EAAEQ,aAFF;AAGNF,MAAAA,IAAI,EAAEC;AAHA,KAJH;AASLG,IAAAA,QAAQ,EAAEH,WAAW,IAAIF,cAAf,IAAiCG;AATtC,GAAP;AAWD,CAhBD;;eAkBeL;;;;;;;;;;ACzFf;;AACA;;AACA;;;;AAEA;;;;;;;AAOA,MAAMY,KAAK,GAAG,CAAC;AAACN,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC,MAAIA,QAAJ,EAAc;AACZ,wBACE,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,MAAA,KAAK;AAAZ,uBAAgB,IAAhB,SADF,CADF;AAKD;;AAED,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AAED,SAAO,CAACC,QAAD,gBACL,6BAAC,QAAD,QACGD,MAAM,iBACL,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,IAAA,KAAK;AAAZ,kBACE,6BAAC,mBAAD,OADF,CADF,EAGW,GAHX,EAIGA,MAAM,CAACO,QAAP,EAJH,CAFJ,CADK,GAYL,EAZF;AAcD,CA3BD;;eA6BeD;;;;;;;;;;ACxCf;;AACA;;AACA;;;;AAEA;;;;;;;AAOA,MAAME,GAAG,GAAG,CAAC;AAACR,EAAAA,MAAD;AAASS,EAAAA,MAAT;AAAiBR,EAAAA;AAAjB,CAAD,kBACV,6BAAC,QAAD;AACE,EAAA,KAAK,EAAC,KADR;AAEE,EAAA,aAAa,EAAC,QAFhB;AAGE,EAAA,cAAc,EAAC,YAHjB;AAIE,EAAA,UAAU,EAAE,CAJd;AAKE,EAAA,aAAa,EAAE;AALjB,gBAME,6BAAC,cAAD;AAAO,EAAA,MAAM,EAAED,MAAf;AAAuB,EAAA,MAAM,EAAES,MAA/B;AAAuC,EAAA,QAAQ,EAAER;AAAjD,EANF,CADF;;eAWeO;;;;;;;;;;ACtBf;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;AAEA;AACA;AACA,MAAME,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AAC9B,QAAM,CAACpC,IAAD,IAAS,oCAASoC,SAAS,CAAC,CAAD,CAAlB,qDAAyB,IAAzB,CAAf;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B,qBAAS,IAAT,CAAlC;AAEA;;;;AAGA,QAAM;AACJhB,IAAAA,IAAI,EAAEiB,WADF;AAEJvB,IAAAA,MAAM,EAAEwB,aAFJ;AAGJpB,IAAAA,OAAO,EAAEqB,cAHL;AAIJf,IAAAA,QAAQ,EAAEgB;AAJN,MAKF,0BALJ;AAOA;;;;AAGA,QAAM;AACJpB,IAAAA,IAAI,EAAEqB,cADF;AAEJ3B,IAAAA,MAAM,EAAE4B,gBAFJ;AAGJxB,IAAAA,OAAO,EAAEyB,iBAHL;AAIJnB,IAAAA,QAAQ,EAAEoB;AAJN,MAKF,6BALJ;AAOA;;;;AAGA,QAAM,CAACzC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,IAAT,CAApC;AACA,wBAAU,MAAM;AACdwC,IAAAA,kBAAkB,IAChBxC,aAAa,CACX,CACE,GAAGuC,iBADL,EAEE,GAAGD,gBAFL,EAGE,GAAGD,cAHL,EAIE7C,GAJF,CAIMC,SAAS,KAAK;AAClBgD,MAAAA,KAAK,EAAEhD,SAAS,CAACE,IADC;AAElB+C,MAAAA,KAAK,EAAEjD,SAAS,CAACC;AAFC,KAAL,CAJf,CADW,CADf;AAWD,GAZD,EAYG,CAAC8C,kBAAD,CAZH;AAcA;;;;AAGA,QAAM,CAAClB,OAAD,EAAUC,UAAV,IAAwB,qBAAS,IAAT,CAA9B;AACA,wBAAU,MAAM;AACda,IAAAA,eAAe,IACbb,UAAU,CACR,CAAC,GAAGY,cAAJ,EAAoB,GAAGD,aAAvB,EAAsC,GAAGD,WAAzC,EAAsDzC,GAAtD,CACEmD,MAAM,KAAK;AACTF,MAAAA,KAAK,EAAEE,MAAM,CAAChD,IADL;AAET+C,MAAAA,KAAK,EAAEC,MAAM,CAACjD;AAFL,KAAL,CADR,CADQ,CADZ;AASD,GAVD,EAUG,CAAC0C,eAAD,CAVH;AAYA;;;;AAGA,wBAAU,MAAM;AACd,QAAI1C,IAAI,IAAI4B,OAAR,IAAmBc,eAAvB,EAAwC;AACtC,YAAMQ,KAAK,GAAGtB,OAAO,CAACuB,MAAR,CAAeF,MAAM,IAAIA,MAAM,CAACD,KAAP,IAAgBhD,IAAzC,CAAd;AAEAsC,MAAAA,YAAY,CAACY,KAAK,CAAC,CAAD,CAAN,CAAZ;AACD;AACF,GAND,EAMG,CAACR,eAAD,EAAkBd,OAAlB,EAA2B5B,IAA3B,CANH;AAQA;;;;;AAIA,QAAM,CAACiD,MAAD,EAASG,SAAT,IAAsB,qBAAS,IAAT,CAA5B;AACA,wBAAU,MAAM;AACdf,IAAAA,SAAS,IACP,CAACY,MADH,IAEEG,SAAS,CAAC,EACR,GAAGf,SADK;AAERgB,MAAAA,IAAI,EAAEC,OAAO,CAACjB,SAAS,CAACU,KAAX;AAFL,KAAD,CAFX;AAMD,GAPD,EAOG,CAACV,SAAD,CAPH;AASA;;;;AAGA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsC,qBAAS,IAAT,CAA5C;AACA,wBAAU,MAAM;AACd,QAAIP,MAAM,IAAIH,kBAAd,EAAkC;AAChC,YAAMW,gBAAgB,GAAGpD,UAAU,CAAC8C,MAAX,CACvBpD,SAAS,IAAIkD,MAAM,CAACI,IAAP,CAAYK,IAAZ,CAAkB,GAAE3D,SAAS,CAACC,IAAK,EAAnC,CADU,CAAzB;AAIAwD,MAAAA,iBAAiB,CAACC,gBAAD,CAAjB;AACD;AACF,GARD,EAQG,CAACR,MAAD,EAASH,kBAAT,CARH;AAUA;;;;AAGA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwB,qBAAS,EAAT,CAA9B;AACA,wBAAU,MAAM;AACd,UAAMC,cAAc,GAAG,CAACC,GAAD,EAAM;AAACH,MAAAA;AAAD,KAAN,KAAoB,CAAC,GAAGG,GAAJ,EAAS,GAAGH,OAAZ,CAA3C;;AACAC,IAAAA,UAAU,CAACD,OAAO,CAACI,MAAR,CAAeF,cAAf,EAA+B,EAA/B,CAAD,CAAV;AACD,GAHD;AAKA;;;;AAGA,QAAMG,SAAS,GACbtB,eAAe,KAAK,CAACd,OAAD,IAAY,CAACA,OAAO,CAACqC,MAAT,GAAkB,CAAnC,CADjB;AAGA,sBACE,6BAAC,QAAD,QACGD,SAAS,iBACR,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,IAAA,GAAG;AAAV,wBADF,CAFJ,EAOG,CAAChE,IAAD,IAAS,CAACqC,SAAV,IAAuB,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEqC,MAAT,IAAkB,CAAzC,iBACC,6BAAC,4BAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,KAAK,EAAErC,OAFT;AAGE,IAAA,QAAQ,EAAES,SAAS,IAAIC,YAAY,CAACD,SAAD;AAHrC,IARJ,EAeGkB,cAAc,CAACU,MAAf,GAAwB,CAAxB,iBAA6B,6BAAC,YAAD;AAAK,IAAA,KAAK,EAAEV;AAAZ,IAfhC,CADF;AAmBD,CAnID;;AAqIApB,MAAM,CAAC+B,SAAP,GAAmB;AACjB9B,EAAAA,SAAS,EAAE+B,mBAAUC;AADJ,CAAnB;eAIejC","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/budfiles/**/*.bud.js`,\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(\n        plugin => path.join(plugin.dir, '/**/*.bud.js'),\n      )\n\n      const matches = globby.sync(packages)\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGenerators = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators('bud-core-generators')\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGenerators\nexport {useProjectGenerators, useModuleGenerators}\n","import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Util: Format matched presets\n *\n * @param {array} matches\n * @return {array}\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Presets sourced from project\n */\nconst useProjectPresets = () => {\n  const [presets, setPresets] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/budfiles/**/*-preset.bud.js`,\n      ])\n\n      setPresets(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [presets, checked]\n}\n\n/**\n * Presets sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModulePresets = keyword => {\n  const [presets, setPresets] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    keyword &&\n      (async () => {\n        setChecked(false)\n\n        const packages = findPlugins({keyword}).map(\n          plugin => `${plugin.dir}/**/*-preset.bud.js`,\n        )\n\n        const matches = await globby(packages)\n\n        setPresets(fromMatches(matches))\n        setChecked(true)\n      })()\n  }, [keyword])\n\n  return [presets, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGenerators = () => {\n  const [project, checkedProject] = useProjectPresets()\n  const [core, checkedCore] = useModulePresets('bud-core-presets')\n  const [plugin, checkedPlugin] = useModulePresets('bud-preset')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGenerators\nexport {useProjectPresets, useModulePresets}\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} status\n * @prop {object} sprout\n * @prop {bool}   complete\n */\nconst Tasks = ({status, complete}) => {\n  if (complete) {\n    return (\n      <Text>\n        <Color green>🏁{'  '}Done</Color>\n      </Text>\n    )\n  }\n\n  if (!status) {\n    return []\n  }\n\n  return !complete ? (\n    <Box>\n      {status && (\n        <Text>\n          <Color green>\n            <Spinner />\n          </Color>{' '}\n          {status.toString()}\n        </Text>\n      )}\n    </Box>\n  ) : (\n    []\n  )\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Box} from 'ink'\nimport Tasks from './components/Tasks'\n\n/**\n * Bud application\n *\n * @prop {string} status\n * @prop {array}  sprout\n * @prop {bool} complete\n */\nconst App = ({status, sprout, complete}) => (\n  <Box\n    width=\"103\"\n    flexDirection=\"column\"\n    justifyContent=\"flex-start\"\n    paddingTop={1}\n    paddingBottom={1}>\n    <Tasks status={status} sprout={sprout} complete={complete} />\n  </Box>\n)\n\nexport default App\n","import React, {useEffect, useState} from 'react'\nimport {Box, Text, Color} from 'ink'\nimport PropTypes from 'prop-types'\nimport QuickSearchInput from 'ink-quicksearch-input'\n\nimport useGenerators from '../../src/hooks/useGenerators'\nimport usePresets from '../../src/hooks/usePresets'\n\nimport App from '../../src/App'\n\n/** Command: bud preset */\n/// Run a preset.\nconst Preset = ({inputArgs}) => {\n  const [name] = useState(inputArgs[1] ?? null)\n  const [selection, setSelection] = useState(null)\n\n  /**\n   * All resolvable presets\n   */\n  const {\n    core: corePresets,\n    plugin: pluginPresets,\n    project: projectPresets,\n    complete: presetsComplete,\n  } = usePresets()\n\n  /**\n   * All resolvable generators\n   */\n  const {\n    core: coreGenerators,\n    plugin: pluginGenerators,\n    project: projectGenerators,\n    complete: generatorsComplete,\n  } = useGenerators()\n\n  /**\n   * Format generator results\n   */\n  const [generators, setGenerators] = useState(null)\n  useEffect(() => {\n    generatorsComplete &&\n      setGenerators(\n        [\n          ...projectGenerators,\n          ...pluginGenerators,\n          ...coreGenerators,\n        ].map(generator => ({\n          value: generator.path,\n          label: generator.name,\n        })),\n      )\n  }, [generatorsComplete])\n\n  /**\n   * Format preset results\n   */\n  const [presets, setPresets] = useState(null)\n  useEffect(() => {\n    presetsComplete &&\n      setPresets(\n        [...projectPresets, ...pluginPresets, ...corePresets].map(\n          preset => ({\n            value: preset.path,\n            label: preset.name,\n          }),\n        ),\n      )\n  }, [presetsComplete])\n\n  /**\n   * Resolve preset if one was passed via CLI\n   */\n  useEffect(() => {\n    if (name && presets && presetsComplete) {\n      const match = presets.filter(preset => preset.label == name)\n\n      setSelection(match[0])\n    }\n  }, [presetsComplete, presets, name])\n\n  /**\n   * From a selection (either by argument or interface)\n   * Source the preset data.\n   */\n  const [preset, setPreset] = useState(null)\n  useEffect(() => {\n    selection &&\n      !preset &&\n      setPreset({\n        ...selection,\n        data: require(selection.value),\n      })\n  }, [selection])\n\n  /**\n   * Filter generators based on specs of selected preset\n   */\n  const [generatorQueue, setGeneratorQueue] = useState(null)\n  useEffect(() => {\n    if (preset && generatorsComplete) {\n      const presetGenerators = generators.filter(\n        generator => preset.data.buds[`${generator.name}`],\n      )\n\n      setGeneratorQueue(presetGenerators)\n    }\n  }, [preset, generatorsComplete])\n\n  /**\n   * Aggregate all prompts from all generators\n   */\n  const [prompts, setPrompts] = useState([])\n  useEffect(() => {\n    const promptsReducer = (acc, {prompts}) => [...acc, ...prompts]\n    setPrompts(prompts.reduce(promptsReducer, []))\n  })\n\n  /**\n   * There were no presets found.\n   */\n  const noResults =\n    presetsComplete && (!presets || !presets.length > 0)\n\n  return (\n    <Box>\n      {noResults && (\n        <Text>\n          <Color red>No presets found</Color>\n        </Text>\n      )}\n\n      {!name && !selection && presets?.length > 0 && (\n        <QuickSearchInput\n          label=\"Select a preset\"\n          items={presets}\n          onSelect={selection => setSelection(selection)}\n        />\n      )}\n\n      {generatorQueue.length > 0 && <App queue={generatorQueue} />}\n    </Box>\n  )\n}\n\nPreset.propTypes = {\n  inputArgs: PropTypes.array,\n}\n\nexport default Preset\n"]}