{"version":3,"sources":["../src/hooks/useGenerators.js","../src/components/Banner.js","../src/components/Loading.js","../src/components/App.js","list/index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","dir","resolve","join","scanAllDirs","plugin","globby","sync","useGenerators","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","Banner","Loading","message","spinnerColor","propTypes","PropTypes","string","defaultProps","App","isLoading","loadingMessage","children","List","buds","bud","id"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/budfiles/**/*.bud.js`,\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(plugin => path.join(plugin.dir, '/**/*.bud.js'))\n\n      const matches = globby.sync(packages)\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGenerators = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators(\n    'bud-core-generators',\n  )\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGenerators\nexport {useProjectGenerators, useModuleGenerators}\n","import React from 'react'\nimport {Box, Text, Color} from 'ink'\nimport Link from 'ink-link'\n\nconst Banner = () => (\n  <Box flexDirection=\"column\" marginBottom={1}>\n    <Text>\n      <Link url=\"https://github.com/roots/bud\" fallback={false}>\n        <Color green>⚡️ @roots/bud</Color>\n      </Link>\n    </Text>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Box, Color} from 'ink'\nimport Spinner from 'ink-spinner'\nimport PropTypes from 'prop-types'\n\n/**\n * Loading\n *\n * @prop {string} message\n */\nconst Loading = ({message, spinnerColor = 'white'}) => (\n  <Box>\n    <Color keyword={spinnerColor}>\n      <Spinner />\n    </Color>{' '}\n    {message}\n  </Box>\n)\n\nLoading.propTypes = {\n  message: PropTypes.string,\n}\n\nLoading.defaultProps = {\n  message: 'Loading',\n}\n\nexport default Loading\n","import React from 'react'\nimport {Box} from 'ink'\n\nimport Banner from './Banner'\nimport Loading from './Loading'\n\n/**\n * Bud application.\n *\n * @prop {object} children\n */\nconst App = ({isLoading, loadingMessage, children}) => (\n  <Box\n    flexDirection=\"column\"\n    justifyContent=\"flex-start\"\n    paddingTop={1}\n    paddingRight={1}\n    paddingBottom={0}\n    paddingLeft={1}>\n    <Banner />\n\n    {isLoading && (\n      <Loading\n        spinnerColor=\"green\"\n        message={loadingMessage ?? 'Loading'}\n      />\n    )}\n    {children}\n  </Box>\n)\n\nexport default App\n","import React from 'react'\nimport {Box} from 'ink'\n\nimport useGenerators from './../../src/hooks/useGenerators'\nimport App from './../../src/components/App'\n\n/** Command: bud list */\n/// List available budfiles\nconst List = () => {\n  const {core, plugin, project, complete} = useGenerators()\n  const buds = [...project, ...plugin, ...core]\n\n  return (\n    <App isLoading={!complete}>\n      {buds.map((bud, id) => (\n        <Box\n          key={id}\n          flexDirection=\"column\"\n          flexGrow={1}\n          justifyContent=\"flex-start\">\n          <Box>◦ {bud.name}</Box>\n        </Box>\n      ))}\n    </App>\n  )\n}\n\nexport default List\n"]}