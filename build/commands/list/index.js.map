{"version":3,"sources":["../src/hooks/useGenerators.js","../src/components/Banner.js","list/index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","dir","resolve","join","scanAllDirs","plugin","globby","sync","useGenerators","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","Banner","List","buds","bud","id"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([\n        `${cwd}/.bud/budfiles/**/*.bud.js`,\n      ])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const packages = findPlugins({\n        dir: path.resolve(path.join(cwd, 'node_modules')),\n        scanAllDirs: true,\n        keyword,\n      }).map(\n        plugin => path.join(plugin.dir, '/**/*.bud.js'),\n      )\n\n      const matches = globby.sync(packages)\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGenerators = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators('bud-core-generators')\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGenerators\nexport {useProjectGenerators, useModuleGenerators}\n","import React from 'react'\nimport {Box} from 'ink'\nimport Gradient from 'ink-gradient'\nimport BigText from 'ink-big-text'\n\nconst Banner = () => (\n  <Box>\n    <Gradient name=\"teen\">\n      <BigText text=\"Bud\" font=\"simple3d\" />\n    </Gradient>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Box} from 'ink'\nimport Divider from 'ink-divider'\n\nimport useGenerators from './../../src/hooks/useGenerators'\nimport Banner from './../../src/components/Banner'\n\n/** Command: bud list */\n/// List available budfiles\nconst List = () => {\n  const {core, plugin, project} = useGenerators()\n  const buds = [...project, ...plugin, ...core]\n\n  return (\n    <Box\n      width=\"103\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      padding={1}>\n      <Banner label={'List budfiles'} />\n      <Divider padding={0} width={100} />\n      {buds.map((bud, id) => (\n        <Box\n          key={id}\n          flexDirection=\"column\"\n          flexGrow={1}\n          justifyContent=\"flex-start\">\n          <Box>{bud.name}</Box>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nexport default List\n"]}