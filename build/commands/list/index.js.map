{"version":3,"sources":["../src/hooks/useGenerators.js","../src/components/Banner.js","list/index.js"],"names":["cwd","process","fromMatches","matches","map","generator","name","path","basename","replace","useProjectGenerators","generators","setGenerators","checked","setChecked","useModuleGenerators","keyword","packages","plugin","dir","useGenerators","project","checkedProject","core","checkedCore","checkedPlugin","status","complete","Banner","List","buds","bud","id"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\n/**\n * Process globby matches into expected object\n */\nconst fromMatches = matches =>\n  matches.map(generator => ({\n    name: path.basename(generator).replace('.bud.js', ''),\n    path: generator,\n  }))\n\n/**\n * Generators sourced from project .bud dir\n */\nconst useProjectGenerators = () => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      setChecked(false)\n\n      const matches = await globby([`${cwd}/.bud/budfiles/**/*.bud.js`])\n\n      setGenerators(fromMatches(matches))\n      setChecked(true)\n    })()\n  }, [])\n\n  return [generators, checked]\n}\n\n/**\n * Generators sourced from node_modules\n *\n * @param {string} keyword package.json keywords match\n */\nconst useModuleGenerators = keyword => {\n  const [generators, setGenerators] = useState([])\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    keyword &&\n      (async () => {\n        setChecked(false)\n\n        const packages = findPlugins({keyword}).map(plugin => `${plugin.dir}/**/*.bud.js`)\n\n        const matches = await globby(packages)\n\n        setGenerators(fromMatches(matches))\n        setChecked(true)\n      })()\n  }, [keyword])\n\n  return [generators, checked]\n}\n\n/**\n * useGenerators hook\n */\nconst useGenerators = () => {\n  const [project, checkedProject] = useProjectGenerators()\n  const [core, checkedCore] = useModuleGenerators('bud-core-generators')\n  const [plugin, checkedPlugin] = useModuleGenerators('bud-generator')\n\n  return {\n    project,\n    plugin,\n    core,\n    status: {\n      project: checkedProject,\n      plugin: checkedPlugin,\n      core: checkedCore,\n    },\n    complete: checkedCore && checkedProject && checkedPlugin,\n  }\n}\n\nexport default useGenerators\nexport {useProjectGenerators, useModuleGenerators}\n","import React from 'react'\nimport {Box} from 'ink'\nimport Gradient from 'ink-gradient'\nimport BigText from 'ink-big-text'\n\nconst Banner = () => (\n  <Box>\n    <Gradient name=\"teen\">\n      <BigText\n        text=\"Bud\"\n        font=\"simple3d\"\n      />\n    </Gradient>\n  </Box>\n)\n\nexport default Banner\n","import React from 'react'\nimport {Box} from 'ink'\nimport Divider from 'ink-divider'\n\nimport useGenerators from './../../src/hooks/useGenerators'\nimport Banner from './../../src/components/Banner'\n\n/** Command: bud list */\n/// List available budfiles\nconst List = () => {\n  const {core, plugin, project} = useGenerators()\n  const buds = [...project, ...plugin, ...core]\n\n  return (\n    <Box width=\"103\" flexDirection=\"column\" justifyContent=\"flex-start\" padding={1}>\n      <Banner label={'List budfiles'} />\n      <Divider padding={0} width={100} />\n      {buds.map((bud, id) => (\n        <Box key={id} flexDirection=\"column\" flexGrow={1} justifyContent=\"flex-start\">\n          <Box>{bud.name}</Box>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nexport default List\n"]}