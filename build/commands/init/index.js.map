{"version":3,"sources":["../src/hooks/useConfig.js","../src/hooks/useData.js","../src/hooks/useGenerator.js","../src/bud/compiler/helpers/index.js","../src/bud/compiler/index.js","../src/bud/config/index.js","../src/bud/data/index.js","../src/bud/util/command.js","../src/bud/util/index.js","../src/bud/pipes/actions.js","../src/bud/pipes/index.js","../src/bud/actions/addDependencies.js","../src/bud/actions/compile.js","../src/bud/actions/copy.js","../src/bud/actions/ensureDir.js","../src/bud/actions/ensureDirs.js","../src/bud/actions/git/clone.js","../src/bud/actions/git/index.js","../src/bud/actions/install.js","../src/bud/actions/json.js","../src/bud/actions/touch.js","../src/bud/actions/index.js","../src/bud/prettier/inferParser.js","../prettier.config.js","../src/bud/prettier/format.js","../src/bud/prettier/index.js","../src/bud/index.js","../src/hooks/useSubscription.js","../src/components/Tasks.js","../src/middleware/GeneratorMiddleware.js","init/index.js"],"names":["useConfig","cwd","configFile","config","require","useData","generator","data","setData","prompts","then","makeGenerator","generatorFile","makeGeneratorTemplateDir","useGenerator","templateDir","tasks","map","task","helpers","helper","fn","Array","prototype","slice","call","arguments","object","component","options","indexOf","inverse","components","hasInstance","forEach","makeCompiler","handlebars","registerHelpers","push","registerHelper","compiler","make","path","compile","makeConfig","projectDir","execa","makeData","key","value","project","command","cmd","makeUtil","actions","observer","props","pipe","Observable","subscribe","next","error","complete","pipes","addDependencies","util","cmdStr","repo","dev","pkgs","join","exitCode","stderr","prettier","src","dest","template","parser","format","copy","ensureDir","fs","ensureDirs","dirs","clone","stdout","on","git","action","install","json","file","output","merge","err","console","log","touch","register","handle","callback","parsers","js","jsx","graphql","css","md","html","htm","ts","tsx","yml","yaml","less","inferParser","ext","split","length","module","exports","arrowParens","bracketSpacing","tabWidth","printWidth","singleQuote","jsxBracketSameLine","useTabs","trailingComma","semi","overrides","files","content","JSON","stringify","bud","registerActions","job","useSubscription","exit","subscription","setSubscription","status","setStatus","setComplete","unsubscribe","Tasks","toString","GeneratorMiddleware","process","init","__dirname","Init","inputArgs","propTypes","PropTypes","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;AAGA,MAAMA,SAAS,GAAGC,GAAG,IAAI;AACvB,QAAMC,UAAU,GAAG,gBAAKD,GAAL,EAAU,sBAAV,CAAnB;AACA,QAAME,MAAM,GAAG,yBAAWD,UAAX,IAAyBE,OAAO,CAACF,UAAD,CAAhC,GAA+C,IAA9D;AAEA,SAAO;AAACC,IAAAA;AAAD,GAAP;AACD,CALD;;eAOeH;;;;;;;;;;ACbf;;AACA;;AAEA;;;AAGA,MAAMK,OAAO,GAAGC,SAAS,IAAI;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB,qBAAS,IAAT,CAAxB;AAEA,wBAAU,MAAM;AACd,QAAIF,SAAS,IAAI,CAACC,IAAlB,EAAwB;AACtBD,MAAAA,SAAS,CAACG,OAAV,GACI,sBAAOH,SAAS,CAACG,OAAjB,EAA0BC,IAA1B,CAA+BH,IAAI,IAAIC,OAAO,CAACD,IAAD,CAA9C,CADJ,GAEIC,OAAO,CAAC,EAAD,CAFX;AAGD;AACF,GAND,EAMG,CAACF,SAAD,CANH;AAQA,SAAO;AAACC,IAAAA;AAAD,GAAP;AACD,CAZD;;eAceF;;;;;;;;;;ACpBf;;AACA;;AAEA,MAAMM,aAAa,GAAGC,aAAa,IACjC,oBAAWA,aAAX,IAA4BR,OAAO,CAACQ,aAAD,CAAnC,GAAqD,IADvD;;;;AAGA,MAAMC,wBAAwB,GAAGD,aAAa,IAC5C,gBAAK,mBAAQA,aAAR,CAAL,EAA6B,WAA7B,CADF;AAGA;;;;;;;AAGA,MAAME,YAAY,GAAGF,aAAa,IAAI;AACpC,QAAMN,SAAS,GAAG,EAChB,GAAGK,aAAa,CAACC,aAAD,CADA;AAEhBG,IAAAA,WAAW,EAAEF,wBAAwB,CAACD,aAAD;AAFrB,GAAlB,CADoC,CAMpC;;AACAN,EAAAA,SAAS,CAACU,KAAV,GAAkBV,SAAS,CAACU,KAAV,CAAgBC,GAAhB,CAAoBC,IAAI,KAAK,EAC7C,GAAGA,IAD0C;AAE7CH,IAAAA,WAAW,EAAET,SAAS,CAACS;AAFsB,GAAL,CAAxB,CAAlB;AAKA,SAAO;AAACT,IAAAA;AAAD,GAAP;AACD,CAbD;;eAeeQ;;;;;;;;;;AC3Bf;;;AAGA,MAAMK,OAAO,GAAGZ,IAAI,IAAI,CACtB;AACEa,EAAAA,MAAM,EAAE,OADV;AAEEC,EAAAA,EAAE,EAAE,YAAY;AACd,WAAOC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,EAAyC,CAAC,CAA1C,CAAP;AACD;AAJH,CADsB,EAOtB;AACEN,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,EAAE,EAAE,UAAUM,MAAV,EAAkBC,SAAlB,EAA6BC,OAA7B,EAAsC;AACxC,QAAItB,IAAI,CAACoB,MAAD,CAAJ,CAAaG,OAAb,CAAqBF,SAArB,IAAkC,CAAC,CAAvC,EAA0C;AACxC,aAAOC,OAAO,CAACR,EAAR,CAAW,IAAX,CAAP;AACD;;AAED,WAAOQ,OAAO,CAACE,OAAR,CAAgB,IAAhB,CAAP;AACD;AARH,CAPsB,EAiBtB;AACEX,EAAAA,MAAM,EAAE,QADV;AAEEC,EAAAA,EAAE,EAAE,UAAUM,MAAV,EAAkBK,UAAlB,EAA8BH,OAA9B,EAAuC;AACzC,QAAII,WAAW,GAAG,KAAlB;;AAEA,QAAID,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACE,OAAX,CAAmBN,SAAS,IAAI;AAC9B,YAAIrB,IAAI,CAACoB,MAAD,CAAJ,CAAaG,OAAb,CAAqBF,SAArB,IAAkC,CAAC,CAAvC,EAA0C;AACxCK,UAAAA,WAAW,GAAG,IAAd;AACD;AACF,OAJD;AAKD;;AAED,WAAOA,WAAW,GAAGJ,OAAO,CAACR,EAAR,CAAW,IAAX,CAAH,GAAsBQ,OAAO,CAACE,OAAR,CAAgB,IAAhB,CAAxC;AACD;AAdH,CAjBsB,EAiCtB;AACEX,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,EAAE,EAAE,UAAUQ,OAAV,EAAmB;AACrB,WAAOA,OAAO,CAACR,EAAR,EAAP;AACD;AAJH,CAjCsB,CAAxB;;eAyCeF;;;;;;;;;;AC5Cf;;AACA;;AACA;;;;AAEA;;;;;AAKA,MAAMgB,YAAY,GAAG,CAAC;AAAC7B,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAuB;AAC1C,kCAAkB;AAAC6B,IAAAA,UAAU,EAAVA;AAAD,GAAlB;AAEA9B,EAAAA,SAAS,CAAC+B,eAAV,IACE/B,SAAS,CAAC+B,eAAV,CAA0BH,OAA1B,CAAkCd,MAAM,IAAI;AAC1CD,qBAAQmB,IAAR,CAAalB,MAAb;AACD,GAFD,CADF;AAKA,wBAAQb,IAAR,EAAc2B,OAAd,CAAsB,CAAC;AAACd,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,KAAkB;AACtCe,wBAAWG,cAAX,CAA0BnB,MAA1B,EAAkCC,EAAlC;AACD,GAFD;AAIA,SAAO;AACLmB,IAAAA,QAAQ,EAAEJ,mBADL;;AAGL;;;;;AAKAK,IAAAA,IAAI,EAAE,UAAUC,IAAV,EAAgB;AACpB,aAAO,KAAKF,QAAL,CAAcG,OAAd,CAAsBD,IAAtB,CAAP;AACD;AAVI,GAAP;AAYD,CAxBD;;eA0BeP;;;;;;;;;;ACnCf;;;;;AAKA,MAAMS,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAa1C,EAAAA;AAAb,CAAD,MAA2B;AAC5C0C,EAAAA,UAD4C;AAE5C,KAAG1C,MAFyC;AAG5C2C,EAAAA,KAAK,EAAE;AACL7C,IAAAA,GAAG,EAAE4C;AADA;AAHqC,CAA3B,CAAnB;;eAQeD;;;;;;;;;;ACbf;;;;;;;AAOA,MAAMG,QAAQ,GAAG,CAAC;AAAC5C,EAAAA,MAAD;AAASI,EAAAA,IAAT;AAAeD,EAAAA;AAAf,CAAD,KAA+B;AAC9C,QAAME,OAAO,GAAG,CAAC;AAACwC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AAChC1C,IAAAA,IAAI,CAACyC,GAAD,CAAJ,GAAYC,KAAZ;AACD,GAFD;;AAIA,SAAO,EACL,IAAI9C,MAAM,GAAGA,MAAM,CAAC+C,OAAV,GAAoB,EAA9B,CADK;AAEL,OAAG3C,IAFE;AAGL,QAAID,SAAS,CAACC,IAAV,GAAiBD,SAAS,CAACC,IAA3B,GAAkC,EAAtC,CAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAXD;;eAaeuC;;;;;;;;;;ACpBf;;;;AAEA;;;;;;;AAOA,MAAMI,OAAO,GAAGhD,MAAM,IAAI;AACxB,SAAOiD,GAAG,IAAIN,eAAMK,OAAN,CAAcC,GAAd,EAAmBjD,MAAM,CAAC2C,KAA1B,CAAd;AACD,CAFD;;eAIeK;;;;;;;;;;ACbf;;;;AAEA;;;;;;AAMA,MAAME,QAAQ,GAAG,CAAC;AAAClD,EAAAA;AAAD,CAAD,MAAe;AAC9BgD,EAAAA,OAAO,EAAE,sBAAQhD,MAAR;AADqB,CAAf,CAAjB;;eAIekD;;;;;;;;;;ACZf;;AACA;;AAEA;;;;;;;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWjD,EAAAA,SAAX;AAAsBgD,EAAAA,OAAtB;AAA+B,KAAGE;AAAlC,CAAD,KAA8C;AAC5D,kBAAKlD,SAAS,CAACU,KAAf,EACGyC,IADH,CAEI,0BACEvC,IAAI,IACF,IAAIwC,gBAAJ,CAAe,MAAMH,QAAN,IAAkB;AAC/BD,IAAAA,OAAO,CAACpC,IAAI,CAACA,IAAN,CAAP,CAAmB;AAACA,MAAAA,IAAD;AAAOoC,MAAAA,OAAP;AAAgBC,MAAAA,QAAhB;AAA0B,SAAGC;AAA7B,KAAnB;AACD,GAFD,CAFJ,CAFJ,EASGG,SATH,CASa;AACTC,IAAAA,IAAI,EAAEA,IAAI,IAAIL,QAAQ,CAACK,IAAT,CAAcA,IAAd,CADL;AAETC,IAAAA,KAAK,EAAEA,KAAK,IAAIN,QAAQ,CAACM,KAAT,CAAeA,KAAf,CAFP;AAGTC,IAAAA,QAAQ,EAAE,MAAMP,QAAQ,CAACO,QAAT;AAHP,GATb;AAcD,CAfD;;eAiBeR;;;;;;;;;;AC5Bf;;;;AAEA;;;;;AAKA,MAAMS,KAAK,GAAG,CAACT,gBAAD,CAAd;eAEeS;;;;;;;;;;ACTf;;;;;;;;;AASA,MAAMC,eAAe,GAAG,OAAO;AAAC9C,EAAAA,IAAD;AAAOqC,EAAAA,QAAP;AAAiBU,EAAAA;AAAjB,CAAP,KAAkC;AACxD,QAAMC,MAAM,GAAG,MAAM;AACnB,YAAQhD,IAAI,CAACiD,IAAb;AACE,WAAK,KAAL;AACE,eAAQ,YAAWjD,IAAI,CAACkD,GAAL,GAAY,IAAZ,GAAmB,EAAE,IAAGlD,IAAI,CAACmD,IAAL,CAAUC,IAAV,CACzC,GADyC,CAEzC,EAFF;;AAGF,WAAK,WAAL;AACE,eAAQ,oBAAmBpD,IAAI,CAACmD,IAAL,CAAUC,IAAV,CAAe,GAAf,CAAoB,IAC7CpD,IAAI,CAACkD,GAAL,GAAY,eAAZ,GAA8B,EAC/B,EAFD;;AAGF;AACEb,QAAAA,QAAQ,CAACM,KAAT,CAAgB,mCAAhB;AAVJ;AAYD,GAbD;;AAeAN,EAAAA,QAAQ,CAACK,IAAT,CAAe,8BAA6B1C,IAAI,CAACiD,IAAK,EAAtD;AACA,QAAM;AAAChB,IAAAA,OAAD;AAAUoB,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA8B,MAAMP,IAAI,CAACd,OAAL,CAAae,MAAM,EAAnB,CAA1C;AACAf,EAAAA,OAAO,IAAII,QAAQ,CAACK,IAAT,CAAcT,OAAd,CAAX;AACAoB,EAAAA,QAAQ,IAAI,CAAZ,GAAgBhB,QAAQ,CAACO,QAAT,EAAhB,GAAsCP,QAAQ,CAACM,KAAT,CAAeW,MAAf,CAAtC;AACD,CApBD;;eAsBeR;;;;;;;;;;AC/Bf;;AACA;;AAEA;;;;;;;;;;;;AAYA,MAAMrB,OAAO,GAAG,OAAO;AACrBzB,EAAAA,IADqB;AAErBqC,EAAAA,QAFqB;AAGrBhD,EAAAA,IAHqB;AAIrBkE,EAAAA,QAJqB;AAKrBjC,EAAAA,QALqB;AAMrBrC,EAAAA;AANqB,CAAP,KAOV;AACJoD,EAAAA,QAAQ,CAACK,IAAT,CAAe,eAAc1C,IAAI,CAACwD,GAAI,EAAtC;AAEA,QAAMA,GAAG,GAAG,MAAM,uBAAS,gBAAKxD,IAAI,CAACH,WAAV,EAAuBG,IAAI,CAACwD,GAA5B,CAAT,EAA2C,MAA3C,CAAlB;AAEA,QAAMC,IAAI,GAAGnC,QAAQ,CAACC,IAAT,CAAcvB,IAAI,CAACyD,IAAnB,EAAyBpE,IAAzB,CAAb;AACA,QAAMqE,QAAQ,GAAGpC,QAAQ,CAACC,IAAT,CAAciC,GAAd,EAAmBnE,IAAnB,CAAjB;AAEAgD,EAAAA,QAAQ,CAACK,IAAT,CAAe,gBAAee,IAAK,EAAnC;AAEA,QAAM,yBACJ,gBAAKxE,MAAM,CAAC0C,UAAZ,EAAwB8B,IAAxB,CADI,EAEJzD,IAAI,CAAC2D,MAAL,GAAcJ,QAAQ,CAACK,MAAT,CAAgBF,QAAhB,EAA0B1D,IAAI,CAAC2D,MAA/B,CAAd,GAAuDD,QAFnD,CAAN;AAKArB,EAAAA,QAAQ,CAACO,QAAT;AACD,CAvBD;;eAyBenB;;;;;;;;;;ACxCf;;AACA;;AAEA;;;;;;;;;AASA,MAAMoC,IAAI,GAAG,OAAO;AAAC7D,EAAAA,IAAD;AAAOf,EAAAA,MAAP;AAAeoD,EAAAA;AAAf,CAAP,KAAoC;AAC/C,QAAMmB,GAAG,GAAG,gBAAKxD,IAAI,CAACH,WAAV,EAAuBG,IAAI,CAACwD,GAA5B,CAAZ;AACA,QAAMC,IAAI,GAAG,gBAAKxE,MAAM,CAAC0C,UAAZ,EAAwB3B,IAAI,CAACyD,IAA7B,CAAb;AAEApB,EAAAA,QAAQ,CAACK,IAAT,CAAe,cAAf;AACA,QAAM,mBAAOc,GAAP,EAAYC,IAAZ,CAAN;AAEApB,EAAAA,QAAQ,CAACO,QAAT;AACD,CARD;;eAUeiB;;;;;;;;;;ACtBf;;AACA;;;;AAEA;;;;;;;;;;;AAWA,MAAMC,SAAS,GAAG,OAAO;AACvB9D,EAAAA,IADuB;AAEvBqC,EAAAA,QAFuB;AAGvBpD,EAAAA,MAHuB;AAIvBI,EAAAA,IAJuB;AAKvBiC,EAAAA;AALuB,CAAP,KAMZ;AACJ,QAAME,IAAI,GAAG,gBAAKvC,MAAM,CAAC0C,UAAZ,EAAwBL,QAAQ,CAACC,IAAT,CAAcvB,IAAI,CAACwB,IAAnB,EAAyBnC,IAAzB,CAAxB,CAAb;AACAgD,EAAAA,QAAQ,CAACK,IAAT,CAAe,qBAAoBlB,IAAK,EAAxC;AACA,QAAMuC,iBAAGD,SAAH,CAAatC,IAAb,CAAN;AAEAa,EAAAA,QAAQ,CAACO,QAAT;AACD,CAZD;;eAcekB;;;;;;;;;;AC5Bf;;AACA;;AAEA;;;;;;AAMA,MAAME,UAAU,GAAG,CAAC;AAClBhE,EAAAA,IADkB;AAElBqC,EAAAA,QAFkB;AAGlBD,EAAAA,OAHkB;AAIlBnD,EAAAA,MAJkB;AAKlBI,EAAAA,IALkB;AAMlBiC,EAAAA;AANkB,CAAD,KAOb;AACJ,kBAAKtB,IAAI,CAACiE,IAAV,EACG1B,IADH,CAEI,0BACEf,IAAI,IACF,IAAIgB,gBAAJ,CAAeH,QAAQ,IAAI;AACzBD,IAAAA,OAAO,CAAC0B,SAAR,CAAkB;AAChB9D,MAAAA,IAAI,EAAE;AAACwB,QAAAA;AAAD,OADU;AAEhBvC,MAAAA,MAFgB;AAGhBI,MAAAA,IAHgB;AAIhBiC,MAAAA,QAJgB;AAKhBe,MAAAA;AALgB,KAAlB;AAOD,GARD,CAFJ,CAFJ,EAeGI,SAfH,CAea;AACTC,IAAAA,IAAI,EAAEA,IAAI,IAAIL,QAAQ,CAACK,IAAT,CAAcA,IAAd,CADL;AAETC,IAAAA,KAAK,EAAEA,KAAK,IAAIN,QAAQ,CAACM,KAAT,CAAeA,KAAf,CAFP;AAGTC,IAAAA,QAAQ,EAAE,MAAMP,QAAQ,CAACO,QAAT;AAHP,GAfb;AAoBD,CA5BD;;eA8BeoB;;;;;;;;;;ACvCf;;;;;;;AAOA,MAAME,KAAK,GAAG,OAAO;AAAC7B,EAAAA,QAAD;AAAWrC,EAAAA,IAAX;AAAiB+C,EAAAA;AAAjB,CAAP,KAAkC;AAC9CV,EAAAA,QAAQ,CAACK,IAAT,CAAe,WAAU1C,IAAI,CAACiD,IAAK,OAAMjD,IAAI,CAACyD,IAAK,EAAnD;AAEA,QAAMS,KAAK,GAAGnB,IAAI,CAACd,OAAL,CACX,4BAA2BjC,IAAI,CAACiD,IAAK,IAAGjD,IAAI,CAACyD,IAAK,EADvC,CAAd;AAIAS,EAAAA,KAAK,CAACC,MAAN,CAAaC,EAAb,CAAgB,MAAhB,EAAwB,MACtB/B,QAAQ,CAACK,IAAT,CACEL,QAAQ,CAACK,IAAT,CAAe,WAAU1C,IAAI,CAACiD,IAAK,OAAMjD,IAAI,CAACyD,IAAK,GAAnD,CADF,CADF;AAMAS,EAAAA,KAAK,CAAC1E,IAAN,CAAW,MAAM6C,QAAQ,CAACO,QAAT,EAAjB;AACD,CAdD;;eAgBesB;;;;;;;;;;ACvBf;;;;AAEA;;;;;;;AAOA,MAAMG,GAAG,GAAG,OAAO;AAACrE,EAAAA,IAAD;AAAOqC,EAAAA,QAAP;AAAiB,KAAGC;AAApB,CAAP,KAAsC;AAChD,MAAItC,IAAI,CAACsE,MAAL,IAAe,OAAnB,EAA4B;AAC1B,wBAAM;AAACtE,MAAAA,IAAD;AAAOqC,MAAAA,QAAP;AAAiB,SAAGC;AAApB,KAAN;AACD;AACF,CAJD;;eAMe+B;;;;;;;;;;ACff;;;;;;;;;AASA,MAAME,OAAO,GAAG,OAAO;AAACvE,EAAAA,IAAD;AAAOqC,EAAAA,QAAP;AAAiBU,EAAAA;AAAjB,CAAP,KAAkC;AAChD,QAAMC,MAAM,GAAG,MAAM;AACnB,YAAQhD,IAAI,CAACiD,IAAb;AACE,WAAK,KAAL;AACE,eAAO,MAAP;;AACF,WAAK,WAAL;AACE,eAAO,kBAAP;;AACF;AACEZ,QAAAA,QAAQ,CAACM,KAAT,CAAgB,mCAAhB;AANJ;AAQD,GATD;;AAWAN,EAAAA,QAAQ,CAACK,IAAT,CAAe,8BAA6B1C,IAAI,CAACiD,IAAK,EAAtD;AAEA,QAAM;AAAChB,IAAAA,OAAD;AAAUoB,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA8B,MAAMP,IAAI,CAACd,OAAL,CAAae,MAAM,EAAnB,CAA1C;AAEAf,EAAAA,OAAO,IAAII,QAAQ,CAACK,IAAT,CAAcT,OAAd,CAAX;AAEAoB,EAAAA,QAAQ,IAAI,CAAZ,GAAgBhB,QAAQ,CAACO,QAAT,EAAhB,GAAsCP,QAAQ,CAACM,KAAT,CAAeW,MAAf,CAAtC;AACD,CAnBD;;eAqBeiB;;;;;;;;;;AC9Bf;;AAEA;;;;;;;AAOA,MAAMC,IAAI,GAAG,gBAAgB;AAACxE,EAAAA,IAAD;AAAOqC,EAAAA,QAAP;AAAiBkB,EAAAA,QAAjB;AAA2BtE,EAAAA;AAA3B,CAAhB,EAAoD;AAC/D,QAAMuF,IAAI,GAAGtF,OAAO,CAAE,GAAED,MAAM,CAAC0C,UAAW,IAAG3B,IAAI,CAACyE,IAAK,EAAnC,CAApB;;AACApC,EAAAA,QAAQ,CAACK,IAAT,CAAe,mBAAkB1C,IAAI,CAACyE,IAAK,EAA3C;;AAEA,MAAI;AACF,UAAMC,MAAM,GAAG1E,IAAI,CAAC2E,KAAL,CAAWH,IAAX,CAAf;AACA,UAAM,yBACH,GAAEvF,MAAM,CAAC0C,UAAW,IAAG3B,IAAI,CAACyE,IAAK,EAD9B,EAEJlB,QAAQ,CAACK,MAAT,CAAgBc,MAAhB,EAAwB,MAAxB,CAFI,CAAN;AAKArC,IAAAA,QAAQ,CAACO,QAAT;AACD,GARD,CAQE,OAAOgC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,kCAAiC9E,IAAI,CAACyE,IAAK,EAAxD;AACD;AACF,CAfD;;eAiBeD;;;;;;;;;;AC1Bf;;AACA;;AAEA;;;;;;;;;AASA,MAAMO,KAAK,GAAG,OAAO;AAAC/E,EAAAA,IAAD;AAAOf,EAAAA,MAAP;AAAeqC,EAAAA,QAAf;AAAyBjC,EAAAA,IAAzB;AAA+BgD,EAAAA;AAA/B,CAAP,KAAoD;AAChE,QAAMb,IAAI,GAAG,gBAAKvC,MAAM,CAAC0C,UAAZ,EAAwBL,QAAQ,CAACC,IAAT,CAAcvB,IAAI,CAACwB,IAAnB,EAAyBnC,IAAzB,CAAxB,CAAb;;AAEA,MAAI;AACF,UAAM,yBAAWmC,IAAX,EAAiBhC,IAAjB,CAAsB,MAAM;AAChC6C,MAAAA,QAAQ,CAACK,IAAT;AACD,KAFK,CAAN;AAIAL,IAAAA,QAAQ,CAACO,QAAT;AACD,GAND,CAME,OAAOD,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACM,KAAT;AACD;AACF,CAZD;;eAceoC;;;;;;;;;;AC1Bf;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;AAKA,MAAM3C,OAAO,GAAG;AACdU,EAAAA,eAAe,EAAfA,wBADc;AAEdrB,EAAAA,OAAO,EAAPA,gBAFc;AAGdoC,EAAAA,IAAI,EAAJA,aAHc;AAIdC,EAAAA,SAAS,EAATA,kBAJc;AAKdE,EAAAA,UAAU,EAAVA,mBALc;AAMdK,EAAAA,GAAG,EAAHA,YANc;AAOdE,EAAAA,OAAO,EAAPA,gBAPc;AAQdC,EAAAA,IAAI,EAAJA,aARc;AASdO,EAAAA,KAAK,EAALA,cATc;AAUdC,EAAAA,QAAQ,EAAE,UAAU;AAACV,IAAAA;AAAD,GAAV,EAAoB;AAC5B,SAAM,GAAEA,MAAM,CAACW,MAAO,EAAtB,IAA2BX,MAAM,CAACY,QAAlC;AACD;AAZa,CAAhB;eAee9C;;;;;;;;;;AC9Bf;;;;AAIA,MAAM+C,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE,OADU;AAEdC,EAAAA,GAAG,EAAE,OAFS;AAGdC,EAAAA,OAAO,EAAE,SAHK;AAIdC,EAAAA,GAAG,EAAE,KAJS;AAKdf,EAAAA,IAAI,EAAE,MALQ;AAMdgB,EAAAA,EAAE,EAAE,UANU;AAOdC,EAAAA,IAAI,EAAE,MAPQ;AAQdC,EAAAA,GAAG,EAAE,MARS;AASdC,EAAAA,EAAE,EAAE,YATU;AAUdC,EAAAA,GAAG,EAAE,YAVS;AAWdC,EAAAA,GAAG,EAAE,MAXS;AAYdC,EAAAA,IAAI,EAAE,MAZQ;AAadC,EAAAA,IAAI,EAAE;AAbQ,CAAhB;AAgBA;;;;;;;AAMA,MAAMC,WAAW,GAAG,gBAAgBvB,IAAhB,EAAsB;AAAA;;AACxC,QAAMwB,GAAG,GAAGxB,IAAI,CAACyB,KAAL,CAAW,GAAX,EAAgBzB,IAAI,CAACyB,KAAL,CAAW,GAAX,EAAgBC,MAAhB,GAAyB,CAAzC,CAAZ;AAEA,sBAAOhB,OAAO,CAAE,GAAEc,GAAI,EAAR,CAAd,iDAA4B,IAA5B;AACD,CAJD;;eAMeD;;;AChCfI,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE,OADE;AAEfC,EAAAA,cAAc,EAAE,KAFD;AAGfC,EAAAA,QAAQ,EAAE,CAHK;AAIfC,EAAAA,UAAU,EAAE,EAJG;AAKfC,EAAAA,WAAW,EAAE,IALE;AAMfC,EAAAA,kBAAkB,EAAE,IANL;AAOfC,EAAAA,OAAO,EAAE,KAPM;AAQfC,EAAAA,aAAa,EAAE,KARA;AASfC,EAAAA,IAAI,EAAE,KATS;AAUfC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,KAAK,EAAE,CAAC,MAAD,CADT;AAEErG,IAAAA,OAAO,EAAE;AACPgD,MAAAA,MAAM,EAAE;AADD;AAFX,GADS,EAOT;AACEqD,IAAAA,KAAK,EAAE,CAAC,QAAD,CADT;AAEErG,IAAAA,OAAO,EAAE;AACPgD,MAAAA,MAAM,EAAE;AADD;AAFX,GAPS;AAVI,CAAjB;;;;;;;;;ACAA;;;;AACA,MAAM1E,MAAM,GAAGC,OAAO,CAAC,6BAAD,CAAtB;AAEA;;;;;;;;;;AAQA,MAAM0E,MAAM,GAAG,CAACqD,OAAD,EAAUtD,MAAV,KAAqB;AAClCsD,EAAAA,OAAO,GACL,OAAOA,OAAP,KAAmB,QAAnB,GAA8BC,IAAI,CAACC,SAAL,CAAeF,OAAf,CAA9B,GAAwDA,OAD1D;AAGA,SAAO1D,kBAASK,MAAT,CAAgBqD,OAAhB,EAAyB,EAC9B,GAAGhI,MAD2B;AAE9B0E,IAAAA,MAAM,EAAEA,MAAM,IAAI;AAFY,GAAzB,CAAP;AAID,CARD;;eAUeC;;;;;;;;;;ACrBf;;AACA;;;;AAEA;;;AAGA,MAAML,QAAQ,GAAG;AACfK,EAAAA,MAAM,EAANA,eADe;AAEfoC,EAAAA,WAAW,EAAXA;AAFe,CAAjB;eAKezC;;;;;;;;;;ACXf;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;AAYA,MAAM6D,GAAG,GAAG9E,KAAK,IAAI;AACnB;AACA,QAAM;AAAClD,IAAAA;AAAD,MAAckD,KAApB;AACA,QAAMrD,MAAM,GAAG,qBAAW,EAAC,GAAGqD;AAAJ,GAAX,CAAf;AACA,QAAMjD,IAAI,GAAG,mBAAS,EAAC,GAAGiD;AAAJ,GAAT,CAAb;AACA,QAAMS,IAAI,GAAG,mBAAS;AAAC9D,IAAAA;AAAD,GAAT,CAAb;AACA,QAAMqC,QAAQ,GAAG,uBAAa;AAAClC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAb,CAAjB;AAEAD,EAAAA,SAAS,CAACiI,eAAV,IACEjI,SAAS,CAACiI,eAAV,CAA0BrG,OAA1B,CAAkCsD,MAAM,IAAI;AAC1ClC,qBAAQ4C,QAAR,CAAiB;AAACV,MAAAA;AAAD,KAAjB;AACD,GAFD,CADF;AAKA,SAAO,IAAI9B,gBAAJ,CAAeH,QAAQ,IAAI;AAChC,UAAMC,KAAK,GAAG;AACZrD,MAAAA,MADY;AAEZI,MAAAA,IAFY;AAGZ+C,MAAAA,OAAO,EAAPA,gBAHY;AAIZd,MAAAA,QAJY;AAKZiC,MAAAA,QAAQ,EAARA,iBALY;AAMZR,MAAAA,IANY;AAOZ3D,MAAAA;AAPY,KAAd;AAUA,oBAAKyD,cAAL,EACGN,IADH,CAEI,0BACE+E,GAAG,IACD,IAAI9E,gBAAJ,CAAe,MAAMH,QAAN,IAAkB;AAC/B,YAAMiF,GAAG,CAAC;AAACjF,QAAAA,QAAD;AAAW,WAAGC;AAAd,OAAD,CAAT;AACD,KAFD,CAFJ,CAFJ,EAUGG,SAVH,CAUa;AACTC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AACZL,QAAAA,QAAQ,CAACK,IAAT,CAAcA,IAAd;AACD,OAHQ;AAITC,MAAAA,KAAK,EAAEA,KAAK,IAAI;AACdN,QAAAA,QAAQ,CAACM,KAAT,CAAeA,KAAf;AACD,OANQ;AAOTC,MAAAA,QAAQ,EAAE,MAAM;AACdP,QAAAA,QAAQ,CAACO,QAAT;AACD;AATQ,KAVb;AAqBD,GAhCM,CAAP;AAiCD,CA9CD;;eAgDewE;;;;;;;;;;ACtEf;;AACA;;AACA;;;;AAEA;;;AAGA,MAAMG,eAAe,GAAG,CAAC;AAACtI,EAAAA,MAAD;AAASI,EAAAA,IAAT;AAAesC,EAAAA,UAAf;AAA2BvC,EAAAA;AAA3B,CAAD,KAA2C;AACjE,QAAM;AAACoI,IAAAA;AAAD,MAAS,kBAAf;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC,qBAAS,KAAT,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB,qBAAS,IAAT,CAA5B;AACA,QAAM,CAACjF,KAAD,IAAU,qBAAS,IAAT,CAAhB;AACA,QAAM,CAACC,QAAD,EAAWiF,WAAX,IAA0B,qBAAS,KAAT,CAAhC;AAEA,wBAAU,MAAM;AACd,QAAIzI,SAAS,IAAIC,IAAb,IAAqB,CAACoI,YAA1B,EAAwC;AACtCC,MAAAA,eAAe,CACb,kBAAI;AAACzI,QAAAA,MAAD;AAASI,QAAAA,IAAT;AAAeD,QAAAA,SAAf;AAA0BuC,QAAAA;AAA1B,OAAJ,EAA2Cc,SAA3C,CAAqD;AACnDC,QAAAA,IAAI,EAAEA,IAAI,IAAIkF,SAAS,CAAClF,IAAD,CAD4B;AAEnDE,QAAAA,QAAQ,EAAE,MAAMiF,WAAW,CAAC,IAAD;AAFwB,OAArD,CADa,CAAf;AAMD;AACF,GATD,EASG,CAACxI,IAAD,CATH;AAWA,wBAAU,MAAM;AACduD,IAAAA,QAAQ,IACN,CAAC,MAAM;AACL6E,MAAAA,YAAY,CAACK,WAAb;AACAN,MAAAA,IAAI;AACL,KAHD,GADF;AAKD,GAND,EAMG,CAAC5E,QAAD,CANH;AAQA,SAAO;AAAC+E,IAAAA,MAAD;AAAShF,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CA5BD;;eA8Be2E;;;;;;;;;;ACrCf;;AACA;;AACA;;;;AAEA;;;;;;;AAOA,MAAMQ,KAAK,GAAG,CAAC;AAACJ,EAAAA,MAAD;AAAS/E,EAAAA;AAAT,CAAD,KAAwB;AACpC,MAAIA,QAAJ,EAAc;AACZ,wBACE,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,MAAA,KAAK;AAAZ,uBAAgB,IAAhB,SADF,CADF;AAKD;;AAED,MAAI,CAAC+E,MAAD,IAAW/E,QAAf,EAAyB;AACvB,WAAO,EAAP;AACD;;AAED,sBACE,6BAAC,QAAD,QACG+E,MAAM,iBACL,6BAAC,SAAD,qBACE,6BAAC,UAAD;AAAO,IAAA,KAAK;AAAZ,kBACE,6BAAC,mBAAD,OADF,CADF,EAGW,GAHX,EAIGA,MAAM,CAACK,QAAP,EAJH,CAFJ,CADF;AAYD,CAzBD;;eA2BeD;;;;;;;;;;ACtCf;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA;;;;;;AAMA,MAAME,mBAAmB,GAAG,CAAC;AAACvI,EAAAA,aAAD;AAAgBgF,EAAAA;AAAhB,CAAD,KAA6B;AACvD,QAAM;AAACzF,IAAAA;AAAD,MAAW,wBAAUiJ,OAAO,CAACnJ,GAAR,EAAV,CAAjB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAc,2BAAaM,aAAb,CAApB;AACA,QAAM;AAACL,IAAAA;AAAD,MAAS,sBAAQD,SAAR,CAAf;AACA,QAAM;AAACuI,IAAAA,MAAD;AAAS/E,IAAAA;AAAT,MAAqB,8BAAgB;AACzC3D,IAAAA,MADyC;AAEzCI,IAAAA,IAFyC;AAGzCD,IAAAA,SAHyC;AAIzCuC,IAAAA,UAAU,EAAE+C;AAJ6B,GAAhB,CAA3B;AAOA,sBAAO,6BAAC,cAAD;AAAO,IAAA,MAAM,EAAEiD,MAAf;AAAuB,IAAA,QAAQ,EAAE/E;AAAjC,IAAP;AACD,CAZD;;eAceqF;;;;;;;;;;AC7Bf;;AACA;;AACA;;AAEA;;;;AAEA;AACA,MAAME,IAAI,GAAG,mBACXC,SADW,EAEX,4CAFW,CAAb;AAIA,MAAM;AAACrJ,EAAAA;AAAD,IAAQmJ,OAAd;AAEA;AACA;;AACA,MAAMG,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC5B,QAAM5D,MAAM,GACV4D,SAAS,IAAIA,SAAS,CAAC,CAAD,CAAtB,GAA4B,gBAAKvJ,GAAL,EAAUuJ,SAAS,CAAC,CAAD,CAAnB,CAA5B,GAAsD,IADxD;AAEA,sBAAO,6BAAC,4BAAD;AAAqB,IAAA,aAAa,EAAEH,IAApC;AAA0C,IAAA,MAAM,EAAEzD;AAAlD,IAAP;AACD,CAJD;;AAMA2D,IAAI,CAACE,SAAL,GAAiB;AACf;AACAD,EAAAA,SAAS,EAAEE,mBAAUC;AAFN,CAAjB;eAKeJ","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import {join} from 'path'\nimport {existsSync} from 'fs-extra'\n\n/**\n * Use config\n */\nconst useConfig = cwd => {\n  const configFile = join(cwd, '.bud/bud.config.json')\n  const config = existsSync(configFile) ? require(configFile) : null\n\n  return {config}\n}\n\nexport default useConfig\n","import {useEffect, useState} from 'react'\nimport {prompt} from 'enquirer'\n\n/**\n * Use prompts\n */\nconst useData = generator => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    if (generator && !data) {\n      generator.prompts\n        ? prompt(generator.prompts).then(data => setData(data))\n        : setData({})\n    }\n  }, [generator])\n\n  return {data}\n}\n\nexport default useData\n","import {join, dirname} from 'path'\nimport {existsSync} from 'fs'\n\nconst makeGenerator = generatorFile =>\n  existsSync(generatorFile) ? require(generatorFile) : null\n\nconst makeGeneratorTemplateDir = generatorFile =>\n  join(dirname(generatorFile), 'templates')\n\n/**\n * Use Generator\n */\nconst useGenerator = generatorFile => {\n  const generator = {\n    ...makeGenerator(generatorFile),\n    templateDir: makeGeneratorTemplateDir(generatorFile),\n  }\n\n  // Attach the templateDir ref. to each generator task.\n  generator.tasks = generator.tasks.map(task => ({\n    ...task,\n    templateDir: generator.templateDir,\n  }))\n\n  return {generator}\n}\n\nexport default useGenerator\nexport {makeGenerator, makeGeneratorTemplateDir}\n","/**\n * Templating helpers\n */\nconst helpers = data => [\n  {\n    helper: 'array',\n    fn: function () {\n      return Array.prototype.slice.call(arguments, 0, -1)\n    },\n  },\n  {\n    helper: 'has',\n    fn: function (object, component, options) {\n      if (data[object].indexOf(component) > -1) {\n        return options.fn(this)\n      }\n\n      return options.inverse(this)\n    },\n  },\n  {\n    helper: 'hasAny',\n    fn: function (object, components, options) {\n      let hasInstance = false\n\n      if (components) {\n        components.forEach(component => {\n          if (data[object].indexOf(component) > -1) {\n            hasInstance = true\n          }\n        })\n      }\n\n      return hasInstance ? options.fn(this) : options.inverse(this)\n    },\n  },\n  {\n    helper: 'raw',\n    fn: function (options) {\n      return options.fn()\n    },\n  },\n]\n\nexport default helpers\n","import handlebars from 'handlebars'\nimport helpers from './helpers'\nimport handlebarsHelpers from 'handlebars-helpers'\n\n/**\n * Compiler.\n *\n * @param {handlebars} handlebars\n */\nconst makeCompiler = ({generator, data}) => {\n  handlebarsHelpers({handlebars})\n\n  generator.registerHelpers &&\n    generator.registerHelpers.forEach(helper => {\n      helpers.push(helper)\n    })\n\n  helpers(data).forEach(({helper, fn}) => {\n    handlebars.registerHelper(helper, fn)\n  })\n\n  return {\n    compiler: handlebars,\n\n    /**\n     * Make template.\n     *\n     * @param {string} path\n     */\n    make: function (path) {\n      return this.compiler.compile(path)\n    },\n  }\n}\n\nexport default makeCompiler\n","/**\n * Config\n *\n * @param {string} projectDir\n */\nconst makeConfig = ({projectDir, config}) => ({\n  projectDir,\n  ...config,\n  execa: {\n    cwd: projectDir,\n  },\n})\n\nexport default makeConfig\n","/**\n * Make data\n *\n * @type   {func}\n * @prop   {object} data\n * @return {object}\n */\nconst makeData = ({config, data, generator}) => {\n  const setData = ({key, value}) => {\n    data[key] = value\n  }\n\n  return {\n    ...(config ? config.project : []),\n    ...data,\n    ...(generator.data ? generator.data : []),\n    setData,\n  }\n}\n\nexport default makeData\n","import execa from 'execa'\n\n/**\n * Task runner\n *\n * @param  {object} config\n *\n * @return {func}\n */\nconst command = config => {\n  return cmd => execa.command(cmd, config.execa)\n}\n\nexport default command\n","import command from './command'\n\n/**\n * Make util\n *\n * @prop   {object} config\n * @return {object}\n */\nconst makeUtil = ({config}) => ({\n  command: command(config),\n})\n\nexport default makeUtil\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Curried actions\n *\n * @prop {Observer} observer\n * @prop {object}   generator\n * @prop {object}   task\n * @prop {object}   actionProps\n */\nconst actions = ({observer, generator, actions, ...props}) => {\n  from(generator.tasks)\n    .pipe(\n      concatMap(\n        task =>\n          new Observable(async observer => {\n            actions[task.task]({task, actions, observer, ...props})\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default actions\n","import actions from './actions'\n\n/**\n * Make Pipes\n *\n * @return {object}\n */\nconst pipes = [actions]\n\nexport default pipes\n","/**\n * Action: Add dependencies\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   util\n *\n * @return {void}\n */\nconst addDependencies = async ({task, observer, util}) => {\n  const cmdStr = () => {\n    switch (task.repo) {\n      case 'npm':\n        return `yarn add ${task.dev ? `-D` : ``} ${task.pkgs.join(\n          ' ',\n        )}`\n      case 'packagist':\n        return `composer require ${task.pkgs.join(' ')} ${\n          task.dev ? `--development` : ``\n        }`\n      default:\n        observer.error(`Incorrect package repo specified.`)\n    }\n  }\n\n  observer.next(`Installating packages from ${task.repo}`)\n  const {command, exitCode, stderr} = await util.command(cmdStr())\n  command && observer.next(command)\n  exitCode == 0 ? observer.complete() : observer.error(stderr)\n}\n\nexport default addDependencies\n","import {join} from 'path'\nimport {outputFile, readFile} from 'fs-extra'\n\n/**\n * Action: template\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   data\n * @param  {object}   config\n * @param  {object}   util\n * @param  {object}   prettier\n * @param  {object}   compiler\n * @return {void}\n */\nconst compile = async ({\n  task,\n  observer,\n  data,\n  prettier,\n  compiler,\n  config,\n}) => {\n  observer.next(`Write file: ${task.src}`)\n\n  const src = await readFile(join(task.templateDir, task.src), 'utf8')\n\n  const dest = compiler.make(task.dest)(data)\n  const template = compiler.make(src)(data)\n\n  observer.next(`Writing file ${dest}`)\n\n  await outputFile(\n    join(config.projectDir, dest),\n    task.parser ? prettier.format(template, task.parser) : template,\n  )\n\n  observer.complete()\n}\n\nexport default compile\n","import {join} from 'path'\nimport {copy as fsCopy} from 'fs-extra'\n\n/**\n * Action: copy\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n *\n * @return {void}\n */\nconst copy = async ({task, config, observer}) => {\n  const src = join(task.templateDir, task.src)\n  const dest = join(config.projectDir, task.dest)\n\n  observer.next(`Copying file`)\n  await fsCopy(src, dest)\n\n  observer.complete()\n}\n\nexport default copy\n","import {join} from 'path'\nimport fs from 'fs-extra'\n\n/**\n * Make directory\n *\n * @param  {object}   task\n * @param  {Observer} observer\n * @param  {object}   config\n * @param  {object}   data\n * @param  {object}   compiler\n *\n * @return {void}\n */\nconst ensureDir = async ({\n  task,\n  observer,\n  config,\n  data,\n  compiler,\n}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n  observer.next(`Writing directory ${path}`)\n  await fs.ensureDir(path)\n\n  observer.complete()\n}\n\nexport default ensureDir\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\n\n/**\n * Scaffold directories\n *\n * @prop   {task array} dirs\n * @return {Observable}\n */\nconst ensureDirs = ({\n  task,\n  observer,\n  actions,\n  config,\n  data,\n  compiler,\n}) => {\n  from(task.dirs)\n    .pipe(\n      concatMap(\n        path =>\n          new Observable(observer => {\n            actions.ensureDir({\n              task: {path},\n              config,\n              data,\n              compiler,\n              observer,\n            })\n          }),\n      ),\n    )\n    .subscribe({\n      next: next => observer.next(next),\n      error: error => observer.error(error),\n      complete: () => observer.complete(),\n    })\n}\n\nexport default ensureDirs\n","/**\n * Action: git clone\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {object}   util\n */\nconst clone = async ({observer, task, util}) => {\n  observer.next(`Cloning ${task.repo} to ${task.dest}`)\n\n  const clone = util.command(\n    `git clone git@github.com:${task.repo} ${task.dest}`,\n  )\n\n  clone.stdout.on('data', () =>\n    observer.next(\n      observer.next(`Cloning ${task.repo} to ${task.dest}}`),\n    ),\n  )\n\n  clone.then(() => observer.complete())\n}\n\nexport default clone\n","import clone from './clone'\n\n/**\n * Action: Github\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n */\nconst git = async ({task, observer, ...props}) => {\n  if (task.action == 'clone') {\n    clone({task, observer, ...props})\n  }\n}\n\nexport default git\n","/**\n * Action: Install from package files\n *\n * @prop   {object}   task\n * @prop   {Observer} observer\n * @prop   {object}   util\n *\n * @return {Observable}\n */\nconst install = async ({task, observer, util}) => {\n  const cmdStr = () => {\n    switch (task.repo) {\n      case 'npm':\n        return 'yarn'\n      case 'packagist':\n        return 'composer install'\n      default:\n        observer.error(`Incorrect package repo specified.`)\n    }\n  }\n\n  observer.next(`Installating packages from ${task.repo}`)\n\n  const {command, exitCode, stderr} = await util.command(cmdStr())\n\n  command && observer.next(command)\n\n  exitCode == 0 ? observer.complete() : observer.error(stderr)\n}\n\nexport default install\n","import {outputFile} from 'fs-extra'\n\n/**\n * Action: Manipulate project JSON\n *\n * @prop {object}   task\n * @prop {Observer} observer\n * @prop {Prettier} prettier\n */\nconst json = async function ({task, observer, prettier, config}) {\n  const json = require(`${config.projectDir}/${task.file}`)\n  observer.next(`Writing JSON to ${task.file}`)\n\n  try {\n    const output = task.merge(json)\n    await outputFile(\n      `${config.projectDir}/${task.file}`,\n      prettier.format(output, 'json'),\n    )\n\n    observer.complete()\n  } catch (err) {\n    console.log(`There was a problem writing to ${task.file}`)\n  }\n}\n\nexport default json\n","import {ensureFile} from 'fs-extra'\nimport {join} from 'path'\n\n/**\n * Action: Touch\n *\n * @prop   {object}   task\n * @prop   {object}   config\n * @prop   {object}   compiler\n * @prop   {object}   data\n * @prop   {Observer} observer\n */\nconst touch = async ({task, config, compiler, data, observer}) => {\n  const path = join(config.projectDir, compiler.make(task.path)(data))\n\n  try {\n    await ensureFile(path).then(() => {\n      observer.next()\n    })\n\n    observer.complete()\n  } catch (error) {\n    observer.error()\n  }\n}\n\nexport default touch\n","import addDependencies from './addDependencies'\nimport compile from './compile'\nimport copy from './copy'\nimport ensureDir from './ensureDir'\nimport ensureDirs from './ensureDirs'\nimport git from './git'\nimport install from './install'\nimport json from './json'\nimport touch from './touch'\n\n/**\n * Actions\n *\n * @type {object}\n */\nconst actions = {\n  addDependencies,\n  compile,\n  copy,\n  ensureDir,\n  ensureDirs,\n  git,\n  install,\n  json,\n  touch,\n  register: function ({action}) {\n    this[`${action.handle}`] = action.callback\n  },\n}\n\nexport default actions\n","/**\n * Prettier parsers.\n * @type {object}\n */\nconst parsers = {\n  js: 'babel',\n  jsx: 'babel',\n  graphql: 'graphql',\n  css: 'css',\n  json: 'json',\n  md: 'markdown',\n  html: 'html',\n  htm: 'html',\n  ts: 'typescript',\n  tsx: 'typescript',\n  yml: 'yaml',\n  yaml: 'yaml',\n  less: 'less',\n}\n\n/**\n * Infer parser.\n *\n * @type  {async func}\n * @param {string} file\n */\nconst inferParser = async function (file) {\n  const ext = file.split('.')[file.split('.').length - 1]\n\n  return parsers[`${ext}`] ?? null\n}\n\nexport default inferParser\n","module.exports = {\n  arrowParens: 'avoid',\n  bracketSpacing: false,\n  tabWidth: 2,\n  printWidth: 70,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: false,\n  trailingComma: 'all',\n  semi: false,\n  overrides: [\n    {\n      files: ['*.md'],\n      options: {\n        parser: 'markdown',\n      },\n    },\n    {\n      files: ['*.json'],\n      options: {\n        parser: 'json',\n      },\n    },\n  ],\n}\n","import prettier from 'prettier'\nconst config = require('../../../prettier.config.js')\n\n/**\n * Format\n *\n * @type   {func}\n * @param  {object|string} content\n * @param  {parser} string\n * @return {string}\n */\nconst format = (content, parser) => {\n  content =\n    typeof content !== 'string' ? JSON.stringify(content) : content\n\n  return prettier.format(content, {\n    ...config,\n    parser: parser || 'babel',\n  })\n}\n\nexport default format\n","import inferParser from './inferParser'\nimport format from './format'\n\n/**\n * Prettier\n */\nconst prettier = {\n  format,\n  inferParser,\n}\n\nexport default prettier\n","import {Observable, from} from 'rxjs'\nimport {concatMap} from 'rxjs/operators'\nimport makeCompiler from './compiler'\nimport makeConfig from './config'\nimport makeData from './data'\nimport makeUtil from './util'\nimport pipes from './pipes'\nimport actions from './actions'\nimport prettier from './prettier'\n\n/**\n * Bud\n *\n * @prop {string} projectDir\n * @prop {object} config\n * @prop {object} data\n * @prop {object} generator\n * @prop {string} templateDir\n * @prop {bool}   logging\n *\n * @return {Observable}\n */\nconst bud = props => {\n  /** 🌱 */\n  const {generator} = props\n  const config = makeConfig({...props})\n  const data = makeData({...props})\n  const util = makeUtil({config})\n  const compiler = makeCompiler({generator, data})\n\n  generator.registerActions &&\n    generator.registerActions.forEach(action => {\n      actions.register({action})\n    })\n\n  return new Observable(observer => {\n    const props = {\n      config,\n      data,\n      actions,\n      compiler,\n      prettier,\n      util,\n      generator,\n    }\n\n    from(pipes)\n      .pipe(\n        concatMap(\n          job =>\n            new Observable(async observer => {\n              await job({observer, ...props})\n            }),\n        ),\n      )\n\n      .subscribe({\n        next: next => {\n          observer.next(next)\n        },\n        error: error => {\n          observer.error(error)\n        },\n        complete: () => {\n          observer.complete()\n        },\n      })\n  })\n}\n\nexport default bud\n","import {useEffect, useState} from 'react'\nimport {useApp} from 'ink'\nimport bud from './../bud'\n\n/**\n * Use subscription.\n */\nconst useSubscription = ({config, data, projectDir, generator}) => {\n  const {exit} = useApp()\n\n  const [subscription, setSubscription] = useState(false)\n  const [status, setStatus] = useState(null)\n  const [error] = useState(null)\n  const [complete, setComplete] = useState(false)\n\n  useEffect(() => {\n    if (generator && data && !subscription) {\n      setSubscription(\n        bud({config, data, generator, projectDir}).subscribe({\n          next: next => setStatus(next),\n          complete: () => setComplete(true),\n        }),\n      )\n    }\n  }, [data])\n\n  useEffect(() => {\n    complete &&\n      (() => {\n        subscription.unsubscribe()\n        exit()\n      })()\n  }, [complete])\n\n  return {status, error, complete}\n}\n\nexport default useSubscription\n","import React from 'react'\nimport {Box, Color, Text} from 'ink'\nimport Spinner from 'ink-spinner'\n\n/**\n * Tasks\n *\n * @prop {object} status\n * @prop {object} sprout\n * @prop {bool}   complete\n */\nconst Tasks = ({status, complete}) => {\n  if (complete) {\n    return (\n      <Text>\n        <Color green>🏁{'  '}Done</Color>\n      </Text>\n    )\n  }\n\n  if (!status || complete) {\n    return []\n  }\n\n  return (\n    <Box>\n      {status && (\n        <Text>\n          <Color green>\n            <Spinner />\n          </Color>{' '}\n          {status.toString()}\n        </Text>\n      )}\n    </Box>\n  )\n}\n\nexport default Tasks\n","import React from 'react'\n\nimport useConfig from './../hooks/useConfig'\nimport useData from './../hooks/useData'\nimport useGenerator from './../hooks/useGenerator'\nimport useSubscription from './../hooks/useSubscription'\n\nimport Tasks from './../components/Tasks'\n\n/**\n * Middleware: Generator\n *\n * @prop {string} generatorFile\n * @prop {string} output\n */\nconst GeneratorMiddleware = ({generatorFile, output}) => {\n  const {config} = useConfig(process.cwd())\n  const {generator} = useGenerator(generatorFile)\n  const {data} = useData(generator)\n  const {status, complete} = useSubscription({\n    config,\n    data,\n    generator,\n    projectDir: output,\n  })\n\n  return <Tasks status={status} complete={complete} />\n}\n\nexport default GeneratorMiddleware\n","import {resolve, join} from 'path'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport GeneratorMiddleware from './../../src/middleware/GeneratorMiddleware'\n\n/** Constants */\nconst init = resolve(\n  __dirname,\n  './../../../src/generators/init/init.bud.js',\n)\nconst {cwd} = process\n\n/** Command: bud init */\n/// Create a new project\nconst Init = ({inputArgs}) => {\n  const output =\n    inputArgs && inputArgs[1] ? join(cwd, inputArgs[1]) : null\n  return <GeneratorMiddleware generatorFile={init} output={output} />\n}\n\nInit.propTypes = {\n  /// Output directory\n  inputArgs: PropTypes.array,\n}\n\nexport default Init\n"]}