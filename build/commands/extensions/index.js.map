{"version":3,"sources":["../src/hooks/useGenerators.js","extensions/index.js"],"names":["cwd","process","useGenerators","search","project","setProject","checkedProject","setCheckedProject","files","map","result","name","path","basename","replace","plugin","setPlugin","checkedPlugin","setCheckedPlugin","keyword","match","dir","results","core","setCore","checkedCore","setCheckedCore","complete","Extensions","extensions","extension","id","pkg"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\nimport {useState, useEffect} from 'react'\nimport findPlugins from 'find-plugins'\nimport globby from 'globby'\n\nconst cwd = process.cwd()\n\nconst useGenerators = (search = '*') => {\n  /**\n   * project .bud\n   */\n  const [project, setProject] = useState([])\n  const [checkedProject, setCheckedProject] = useState(false)\n  useEffect(() => {\n    (async () => {\n      setCheckedProject(false)\n\n      const files = await globby([\n        `${cwd}/.bud/budfiles/**/${search}.bud.js`,\n      ])\n\n      setProject(files.map(result => ({\n        name: path.basename(result).replace('.bud.js', ''),\n        path: result,\n      })))\n\n      setCheckedProject(true)\n    })()\n  }, [search])\n\n  /**\n   * node_modules\n   */\n  const [plugin, setPlugin] = useState([])\n  const [checkedPlugin, setCheckedPlugin] = useState(false)\n  useEffect(() => {\n    (async () => {\n      setCheckedPlugin(false)\n\n      const files = findPlugins({\n        keyword: 'bud-generators',\n      }).map(match => `${match.dir}/**/${search}.bud.js`)\n\n      const results = await globby(files)\n\n      setPlugin(results.map(result => ({\n        name: path.basename(result).replace('.bud.js', ''),\n        path: result,\n      })))\n\n      setCheckedPlugin(true)\n    })()\n  }, [search])\n\n  /**\n   * @roots/bud-generators\n   */\n  const [core, setCore] = useState([])\n  const [checkedCore, setCheckedCore] = useState(false)\n  useEffect(() => {\n    (async () => {\n      setCheckedCore(false)\n\n      const files = findPlugins({\n        keyword: 'bud-core-generators',\n      }).map(match => `${match.dir}/**/${search}.bud.js`)\n\n      const results = await globby(files)\n\n      setCore(results.map(result => ({\n        name: path.basename(result).replace('.bud.js', ''),\n        path: result,\n      })))\n\n      setCheckedCore(true)\n    })()\n  }, [search])\n\n  return {\n    project,\n    plugin,\n    core,\n    complete: {\n      project: checkedProject,\n      core: checkedCore,\n      plugin: checkedPlugin,\n    },\n  }\n}\n\nexport default useGenerators\n","import React from 'react'\nimport {Box} from 'ink'\nimport useExtensions from '../../src/hooks/useGenerators'\n\n/** Command: bud plugins */\n/// List bud plugins\nconst Extensions = () => {\n  const [extensions] = useExtensions()\n\n  return extensions.map((extension, id) => <Box key={id}>{extension.pkg.name}</Box>)\n}\n\nexport default Extensions\n"]}