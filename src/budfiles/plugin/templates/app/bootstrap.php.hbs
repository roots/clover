<?php

/**
 * The bootstrap file creates and returns the container.
 */

require __DIR__ . '/../vendor/autoload.php';

use function DI\create;
use function DI\make;
use DI\ContainerBuilder;
use Psr\Container\ContainerInterface;
use Illuminate\Support\Collection;
use {{pascalcase namespace}}\Plugin\Block;
use {{pascalcase namespace}}\Plugin\BlockRepository;
use {{pascalcase namespace}}\Plugin\Manifest;

$builder = new ContainerBuilder;

$builder->addDefinitions([
    'config.dir' => realpath(__DIR__ . '/..'),
    'config.manifest' => make(ContainerInterface $bud) {
        if (! $manifestPath = realpath(__DIR__ . '/../dist/manifest.json')) {
            return;
        }

        return $bud->get('util.collection')::make(
            json_decode(file_get_contents($this->bud->get('config.manifest')))
        );
    },
    'config.namespace' => '{{lowercase (dashcase namespace)}}',
    'block' => function (ContainerInterface $bud) {
        return new Block($bud, $bud->get('util.collection'));
    },
    'blocks' => function (ContainerInterface $bud) {
        return new BlockRepository($bud);
    },
    'manifest' => function (ContainerInterface $bud) {
        $manifest = new Manifest($bud);
        $manifest->load();
        return $manifest;
    },
    'util.collection' => create(Collection::class),
]);

return $builder->build();
