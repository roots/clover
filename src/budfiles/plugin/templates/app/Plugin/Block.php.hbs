<?php

namespace {{pascalcase namespace}}\Plugin;

use {{pascalcase namespace}}\Plugin\BlockInterface;
use Psr\Container\ContainerInterface;
use Illuminate\Support\Collection;

/**
 * Block class.
 */
class Block implements BlockInterface
{
    /** @var string */
    protected $handle;

    /** @var array */
    protected $dependencies;

    /** @var array */
    protected $attributes;

    /** @var array */
    protected $assets;

    /**
     * Constructor.
     */
    public function __construct(ContainerInterface $bud, Collection $collection)
    {
        $this->bud = $bud;
        $this->assets = $collection::make([]);
    }

    /**
     * Get handle.
     *
     * @return string
     */
    public function getHandle(): string
    {
        return $this->handle;
    }

    /**
     * Set handle.
     *
     * @param  string $handle
     * @return Block
     */
    public function setHandle(string $handle): void
    {
        $this->handle = $this->bud->get('config.namespace') . '/' . $handle;
    }

    /**
     * Get manifest entry
     *
     * @return array
     */
    public function getAssets(): array
    {
        return $this->assets;
    }

    /**
     * Set manifest entries
     *
     * @param  array $assets
     * @return void
     */
     public function setAssets(array $assets): void
     {
         $this->assets = $assets;
     }

    /**
     * Set manifest entry.
     *
     */
    public function addAsset(array $asset)
    {
        $this->assets->push($asset);
    }

    /**
     * Get dependencies.
     */
    public function getDependencies(): array
    {
        return $this->dependencies;
    }

    /**
     * Set dependencies.
     */
    public function setDependencies(array $dependencies): void
    {
        $this->dependencies = $dependencies;
    }
}
