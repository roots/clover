<?php

namespace {{pascalcase namespace}}\Plugin;

use Psr\Container\ContainerInterface;
use Illuminate\Support\Collection;

/**
 * Manifest class.
 */
class Manifest
{
    /** @var ContainerInterface */
    protected $bud;

    /** @var Collection */
    protected $assets;

    /**
     * Class constructor.
     *
     * @param ContainerInterface
     * @param Collection
     * @param Collection
     */
    public function __construct(ContainerInterface $bud, Collection $assets, Collection $collection)
    {
        $this->bud = $bud;
        $this->collection = $collection;
        $this->assets = $assets;
    }

    /**
     * Return asset
     */
    public function getAsset($name, $context, $ext)
    {
        return  $this->bud->get('plugin.url') . str_replace($this->bud->get('plugin.path.dist'), '', $this->assets->get("{$name}/{$context}")->{$ext});
    }

    /**
     * Return dependency manifest
     */
    public function getDependencies($name, $context)
    {
        $manifestPath = $this->bud->get('plugin.path') . $this->assets->get("{$name}/{$context}")->json;

        return $this->collection::make(
            (object) json_decode(file_get_contents($manifestPath))
        )->get('dependencies');
    }
}
