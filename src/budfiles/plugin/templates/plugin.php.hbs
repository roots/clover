<?php
/**
 * Plugin Name:  {{name}}
 * Plugin URI:   {{lowercase website}}
 * Description:  {{description}}
 * Author:       {{titleize author}} <{{lowercase email}}>
 * License:      MIT
 * Text Domain:  {{lowercase (dashcase namespace)}}
 *
 * @package {{namespace}}
 */

/**
 * Register {{lowercase (dashcase namespace)}}/{{lowercase (dashcase name)}} block assets
 *
 * @see Enqueueing Editor Assets <https://git.io/JvPHy>
 * @see Dependency Extraction Webpack Plugin <https://git.io/Jv1ll>
 */
add_action('init', function () {
    (new class {
        /** @var DI\Container */
        public $bud;

        /**
         * Class constructor.
         */
        public function __construct()
        {
            $this->bud = require __DIR__ . '/app/bootstrap.php';
            $this->collection = $this->bud->get('collection');

            $this->blocks = $this->bud->get('blocks');
            $this->manifest = $this->bud->get('manifest');
        }

        /**
         * Class invocation.
         *
         * @throws \WP_Error
         * @return void
         */
        public function __invoke(): void
        {
            $this->loadBlocks();
            $this->registerBlocks();
        }

        /**
         * Load blocks.
         *
         * @return void
         */
        protected function loadBlocks(): void
        {
            $this->bud->get('plugin.blocks')->each(function ($name) {
                $block = $this->bud->make('block');

                $block->setName($name);

                $this->collection::make(['editor', 'public'])
                    ->each(function ($context) use ($block) {
                        $block->setAsset($context, 'js', (
                            $this->manifest->getAsset($block->getName(), $context, 'js')
                        ));

                        $block->setAsset($context, 'css', (
                            $this->manifest->getAsset($block->getName(), $context, 'css')
                        ));

                        $block->setDependencies($context, (
                            $this->manifest->getDependencies($block->getName(), $context)
                        ));
                    });

                $this->blocks->add($block);
            });
        }

        /**
         * Register blocks.
         *
         * @return void
         */
        protected function registerBlocks(): void
        {
            $this->blocks->all()->each(function ($block) {
                $this->collection::make(['editor', 'public'])
                    ->each(function ($context) use ($block) {
                        wp_register_script(
                            join('/', [$block->getHandle(), $context, 'js']),
                            $block->getAssetUrl($context, 'js'),
                            $block->getDependencies($context),
                            null
                        );

                        wp_register_style(
                            join('/', [$block->getHandle(), $context, 'css']),
                            $block->getAssetUrl($context, 'css'),
                            [],
                            null
                        );
                    });

                register_block_type($block->getHandle(), [
                    'editor_script' => join('/', [$block->getHandle(), 'editor', 'js']),
                    'editor_style' => join('/', [$block->getHandle(), 'editor', 'css']),
                    'script' => join('/', [$block->getHandle(), 'public', 'js']),
                    'style' => join('/', [$block->getHandle(), 'public', 'css']),
                ]);
            });
        }
    })();
});
